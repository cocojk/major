 
library(KoNLP)
library(arules)
library(arulesViz)
 
ahn <- paste(readLines("ElectricCarPredict.txt"),collapse="\n")
ahn <- paste(readLines("output_Hyundai_msg.txt"),collapse="\n")

library(tm)
ahn.vec <- readLines("output_Hyundai_msg.txt")
ds <- VectorSource(ahn.vec)
corp <- Corpus(ds)
corp = tm_map(corp,removePunctuation)
term.matrix <- as.matrix(term.matrix)


 
ahn <- gsub("[[:space:]]", " ", ahn)
ahn.vec <- strsplit(ahn, split="\\.")[[1]]

ahn.vec <- readLines("output_Hyundai_msg.txt")
 
useSejongDic()
mergeUserDic(data.frame(c("´ëÇÑ¹Î±¹"), c("ncn")))

tran <- Map(extractNoun, ahn.vec)

tran <- unique(tran)
tran <- sapply(tran, unique)
tran <- sapply(tran, function(x) {Filter(function(y) {
  nchar(y) <= 4 && nchar(y) > 1 && is.hangul(y)}
                                         ,x)} )
tran <- Filter(function(x){length(x) >= 2}, tran)
names(tran) <- paste("Tr", 1:length(tran), sep="")
wordtran <- as(tran, "transactions")
 
ares <- apriori(wordtran, parameter=list(minlen=2,supp=0.02, conf=0.9))
 
# remove  subsets 
ares.sorted <- sort(ares, by="lift")
subset.matrix <- is.subset(ares.sorted, ares.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
which(redundant)
ares.pruned <- ares.sorted[!redundant]
 
 
#ploting  
plot(ares.pruned, method="group")



 
plot(ares.pruned, method="graph")
 
plot(ares.pruned, method="graph", control=list(type="items"))
 
plot(ares.pruned, method="paracoord", control=list(reorder=TRUE))