-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--F1_pOut[0] is ePC:cPC|pOut[0]
--operation mode is normal

F1_pOut[0]_lut_out = pNextpc[0] & pSelect & (!pReset);
F1_pOut[0] = DFFEAS(F1_pOut[0]_lut_out, !pClock, VCC, , F1L4, , , , );


--F1_pOut[1] is ePC:cPC|pOut[1]
--operation mode is normal

F1_pOut[1]_lut_out = pSelect & pNextpc[1] & (!pReset);
F1_pOut[1] = DFFEAS(F1_pOut[1]_lut_out, !pClock, VCC, , F1L4, , , , );


--F1_pOut[2] is ePC:cPC|pOut[2]
--operation mode is normal

F1_pOut[2]_lut_out = pJSelect & pJPC[0] # !pJSelect & (B1L1);
F1_pOut[2] = DFFEAS(F1_pOut[2]_lut_out, !pClock, VCC, , , pNextpc[2], , pReset, pSelect);


--F1_pOut[3] is ePC:cPC|pOut[3]
--operation mode is normal

F1_pOut[3]_lut_out = pJSelect & pJPC[1] # !pJSelect & (B1L3);
F1_pOut[3] = DFFEAS(F1_pOut[3]_lut_out, !pClock, VCC, , , pNextpc[3], , pReset, pSelect);


--F1_pOut[4] is ePC:cPC|pOut[4]
--operation mode is normal

F1_pOut[4]_lut_out = pJSelect & pJPC[2] # !pJSelect & (B1L5);
F1_pOut[4] = DFFEAS(F1_pOut[4]_lut_out, !pClock, VCC, , , pNextpc[4], , pReset, pSelect);


--F1_pOut[5] is ePC:cPC|pOut[5]
--operation mode is normal

F1_pOut[5]_lut_out = pJSelect & pJPC[3] # !pJSelect & (B1L7);
F1_pOut[5] = DFFEAS(F1_pOut[5]_lut_out, !pClock, VCC, , , pNextpc[5], , pReset, pSelect);


--F1_pOut[6] is ePC:cPC|pOut[6]
--operation mode is normal

F1_pOut[6]_lut_out = pJSelect & pJPC[4] # !pJSelect & (B1L9);
F1_pOut[6] = DFFEAS(F1_pOut[6]_lut_out, !pClock, VCC, , , pNextpc[6], , pReset, pSelect);


--F1_pOut[7] is ePC:cPC|pOut[7]
--operation mode is normal

F1_pOut[7]_lut_out = pJSelect & pJPC[5] # !pJSelect & (B1L11);
F1_pOut[7] = DFFEAS(F1_pOut[7]_lut_out, !pClock, VCC, , , pNextpc[7], , pReset, pSelect);


--F1_pOut[8] is ePC:cPC|pOut[8]
--operation mode is normal

F1_pOut[8]_lut_out = pJSelect & pJPC[6] # !pJSelect & (B1L31);
F1_pOut[8] = DFFEAS(F1_pOut[8]_lut_out, !pClock, VCC, , , pNextpc[8], , pReset, pSelect);


--F1_pOut[9] is ePC:cPC|pOut[9]
--operation mode is normal

F1_pOut[9]_lut_out = pJSelect & pJPC[7] # !pJSelect & (B1L51);
F1_pOut[9] = DFFEAS(F1_pOut[9]_lut_out, !pClock, VCC, , , pNextpc[9], , pReset, pSelect);


--F1_pOut[10] is ePC:cPC|pOut[10]
--operation mode is normal

F1_pOut[10]_lut_out = pJSelect & pJPC[8] # !pJSelect & (B1L71);
F1_pOut[10] = DFFEAS(F1_pOut[10]_lut_out, !pClock, VCC, , , pNextpc[10], , pReset, pSelect);


--F1_pOut[11] is ePC:cPC|pOut[11]
--operation mode is normal

F1_pOut[11]_lut_out = pJSelect & pJPC[9] # !pJSelect & (B1L91);
F1_pOut[11] = DFFEAS(F1_pOut[11]_lut_out, !pClock, VCC, , , pNextpc[11], , pReset, pSelect);


--F1_pOut[12] is ePC:cPC|pOut[12]
--operation mode is normal

F1_pOut[12]_lut_out = pJSelect & pJPC[10] # !pJSelect & (B1L12);
F1_pOut[12] = DFFEAS(F1_pOut[12]_lut_out, !pClock, VCC, , , pNextpc[12], , pReset, pSelect);


--F1_pOut[13] is ePC:cPC|pOut[13]
--operation mode is normal

F1_pOut[13]_lut_out = pJSelect & pJPC[11] # !pJSelect & (B1L32);
F1_pOut[13] = DFFEAS(F1_pOut[13]_lut_out, !pClock, VCC, , , pNextpc[13], , pReset, pSelect);


--F1_pOut[14] is ePC:cPC|pOut[14]
--operation mode is normal

F1_pOut[14]_lut_out = pJSelect & pJPC[12] # !pJSelect & (B1L52);
F1_pOut[14] = DFFEAS(F1_pOut[14]_lut_out, !pClock, VCC, , , pNextpc[14], , pReset, pSelect);


--F1_pOut[15] is ePC:cPC|pOut[15]
--operation mode is normal

F1_pOut[15]_lut_out = pJSelect & pJPC[13] # !pJSelect & (B1L72);
F1_pOut[15] = DFFEAS(F1_pOut[15]_lut_out, !pClock, VCC, , , pNextpc[15], , pReset, pSelect);


--F1_pOut[16] is ePC:cPC|pOut[16]
--operation mode is normal

F1_pOut[16]_lut_out = pJSelect & pJPC[14] # !pJSelect & (B1L92);
F1_pOut[16] = DFFEAS(F1_pOut[16]_lut_out, !pClock, VCC, , , pNextpc[16], , pReset, pSelect);


--F1_pOut[17] is ePC:cPC|pOut[17]
--operation mode is normal

F1_pOut[17]_lut_out = pJSelect & pJPC[15] # !pJSelect & (B1L13);
F1_pOut[17] = DFFEAS(F1_pOut[17]_lut_out, !pClock, VCC, , , pNextpc[17], , pReset, pSelect);


--F1_pOut[18] is ePC:cPC|pOut[18]
--operation mode is normal

F1_pOut[18]_lut_out = pJSelect & pJPC[16] # !pJSelect & (B1L33);
F1_pOut[18] = DFFEAS(F1_pOut[18]_lut_out, !pClock, VCC, , , pNextpc[18], , pReset, pSelect);


--F1_pOut[19] is ePC:cPC|pOut[19]
--operation mode is normal

F1_pOut[19]_lut_out = pJSelect & pJPC[17] # !pJSelect & (B1L53);
F1_pOut[19] = DFFEAS(F1_pOut[19]_lut_out, !pClock, VCC, , , pNextpc[19], , pReset, pSelect);


--F1_pOut[20] is ePC:cPC|pOut[20]
--operation mode is normal

F1_pOut[20]_lut_out = pJSelect & pJPC[18] # !pJSelect & (B1L73);
F1_pOut[20] = DFFEAS(F1_pOut[20]_lut_out, !pClock, VCC, , , pNextpc[20], , pReset, pSelect);


--F1_pOut[21] is ePC:cPC|pOut[21]
--operation mode is normal

F1_pOut[21]_lut_out = pJSelect & pJPC[19] # !pJSelect & (B1L93);
F1_pOut[21] = DFFEAS(F1_pOut[21]_lut_out, !pClock, VCC, , , pNextpc[21], , pReset, pSelect);


--F1_pOut[22] is ePC:cPC|pOut[22]
--operation mode is normal

F1_pOut[22]_lut_out = pJSelect & pJPC[20] # !pJSelect & (B1L14);
F1_pOut[22] = DFFEAS(F1_pOut[22]_lut_out, !pClock, VCC, , , pNextpc[22], , pReset, pSelect);


--F1_pOut[23] is ePC:cPC|pOut[23]
--operation mode is normal

F1_pOut[23]_lut_out = pJSelect & pJPC[21] # !pJSelect & (B1L34);
F1_pOut[23] = DFFEAS(F1_pOut[23]_lut_out, !pClock, VCC, , , pNextpc[23], , pReset, pSelect);


--F1_pOut[24] is ePC:cPC|pOut[24]
--operation mode is normal

F1_pOut[24]_lut_out = pJSelect & pJPC[22] # !pJSelect & (B1L54);
F1_pOut[24] = DFFEAS(F1_pOut[24]_lut_out, !pClock, VCC, , , pNextpc[24], , pReset, pSelect);


--F1_pOut[25] is ePC:cPC|pOut[25]
--operation mode is normal

F1_pOut[25]_lut_out = pJSelect & pJPC[23] # !pJSelect & (B1L74);
F1_pOut[25] = DFFEAS(F1_pOut[25]_lut_out, !pClock, VCC, , , pNextpc[25], , pReset, pSelect);


--F1_pOut[26] is ePC:cPC|pOut[26]
--operation mode is normal

F1_pOut[26]_lut_out = pJSelect & pJPC[24] # !pJSelect & (B1L94);
F1_pOut[26] = DFFEAS(F1_pOut[26]_lut_out, !pClock, VCC, , , pNextpc[26], , pReset, pSelect);


--F1_pOut[27] is ePC:cPC|pOut[27]
--operation mode is normal

F1_pOut[27]_lut_out = pJSelect & pJPC[25] # !pJSelect & (B1L15);
F1_pOut[27] = DFFEAS(F1_pOut[27]_lut_out, !pClock, VCC, , , pNextpc[27], , pReset, pSelect);


--F1_pOut[28] is ePC:cPC|pOut[28]
--operation mode is normal

F1_pOut[28]_lut_out = !F1L53 & (pSelect & pNextpc[28] # !pSelect & (B1L35));
F1_pOut[28] = DFFEAS(F1_pOut[28]_lut_out, !pClock, VCC, , , , , , );


--F1_pOut[29] is ePC:cPC|pOut[29]
--operation mode is normal

F1_pOut[29]_lut_out = !F1L53 & (pSelect & pNextpc[29] # !pSelect & (B1L55));
F1_pOut[29] = DFFEAS(F1_pOut[29]_lut_out, !pClock, VCC, , , , , , );


--F1_pOut[30] is ePC:cPC|pOut[30]
--operation mode is normal

F1_pOut[30]_lut_out = !F1L53 & (pSelect & pNextpc[30] # !pSelect & (B1L75));
F1_pOut[30] = DFFEAS(F1_pOut[30]_lut_out, !pClock, VCC, , , , , , );


--F1_pOut[31] is ePC:cPC|pOut[31]
--operation mode is normal

F1_pOut[31]_lut_out = !F1L53 & (pSelect & pNextpc[31] # !pSelect & (B1L95));
F1_pOut[31] = DFFEAS(F1_pOut[31]_lut_out, !pClock, VCC, , , , , , );


--K1_q_a[0] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[0]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[0]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[0]_PORT_A_address_reg = DFFE(K1_q_a[0]_PORT_A_address, K1_q_a[0]_clock_0, , , );
K1_q_a[0]_clock_0 = pClock;
K1_q_a[0]_PORT_A_data_out = MEMORY(, , K1_q_a[0]_PORT_A_address_reg, , , , , , K1_q_a[0]_clock_0, , , , , );
K1_q_a[0] = K1_q_a[0]_PORT_A_data_out[0];


--A1L86 is pInstruction~96
--operation mode is normal

A1L86 = K1_q_a[0] # pReset;


--K1_q_a[1] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[1]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[1]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[1]_PORT_A_address_reg = DFFE(K1_q_a[1]_PORT_A_address, K1_q_a[1]_clock_0, , , );
K1_q_a[1]_clock_0 = pClock;
K1_q_a[1]_PORT_A_data_out = MEMORY(, , K1_q_a[1]_PORT_A_address_reg, , , , , , K1_q_a[1]_clock_0, , , , , );
K1_q_a[1] = K1_q_a[1]_PORT_A_data_out[0];


--A1L96 is pInstruction~97
--operation mode is normal

A1L96 = pReset # K1_q_a[1];


--K1_q_a[2] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[2]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[2]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[2]_PORT_A_address_reg = DFFE(K1_q_a[2]_PORT_A_address, K1_q_a[2]_clock_0, , , );
K1_q_a[2]_clock_0 = pClock;
K1_q_a[2]_PORT_A_data_out = MEMORY(, , K1_q_a[2]_PORT_A_address_reg, , , , , , K1_q_a[2]_clock_0, , , , , );
K1_q_a[2] = K1_q_a[2]_PORT_A_data_out[0];


--A1L07 is pInstruction~98
--operation mode is normal

A1L07 = pReset # K1_q_a[2];


--K1_q_a[3] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[3]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[3]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[3]_PORT_A_address_reg = DFFE(K1_q_a[3]_PORT_A_address, K1_q_a[3]_clock_0, , , );
K1_q_a[3]_clock_0 = pClock;
K1_q_a[3]_PORT_A_data_out = MEMORY(, , K1_q_a[3]_PORT_A_address_reg, , , , , , K1_q_a[3]_clock_0, , , , , );
K1_q_a[3] = K1_q_a[3]_PORT_A_data_out[0];


--A1L17 is pInstruction~99
--operation mode is normal

A1L17 = pReset # K1_q_a[3];


--K1_q_a[4] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[4]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[4]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[4]_PORT_A_address_reg = DFFE(K1_q_a[4]_PORT_A_address, K1_q_a[4]_clock_0, , , );
K1_q_a[4]_clock_0 = pClock;
K1_q_a[4]_PORT_A_data_out = MEMORY(, , K1_q_a[4]_PORT_A_address_reg, , , , , , K1_q_a[4]_clock_0, , , , , );
K1_q_a[4] = K1_q_a[4]_PORT_A_data_out[0];


--A1L27 is pInstruction~100
--operation mode is normal

A1L27 = pReset # K1_q_a[4];


--K1_q_a[5] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[5]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[5]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[5]_PORT_A_address_reg = DFFE(K1_q_a[5]_PORT_A_address, K1_q_a[5]_clock_0, , , );
K1_q_a[5]_clock_0 = pClock;
K1_q_a[5]_PORT_A_data_out = MEMORY(, , K1_q_a[5]_PORT_A_address_reg, , , , , , K1_q_a[5]_clock_0, , , , , );
K1_q_a[5] = K1_q_a[5]_PORT_A_data_out[0];


--A1L37 is pInstruction~101
--operation mode is normal

A1L37 = pReset # K1_q_a[5];


--K1_q_a[6] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[6]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[6]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[6]_PORT_A_address_reg = DFFE(K1_q_a[6]_PORT_A_address, K1_q_a[6]_clock_0, , , );
K1_q_a[6]_clock_0 = pClock;
K1_q_a[6]_PORT_A_data_out = MEMORY(, , K1_q_a[6]_PORT_A_address_reg, , , , , , K1_q_a[6]_clock_0, , , , , );
K1_q_a[6] = K1_q_a[6]_PORT_A_data_out[0];


--A1L47 is pInstruction~102
--operation mode is normal

A1L47 = pReset # K1_q_a[6];


--K1_q_a[7] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[7]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[7]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[7]_PORT_A_address_reg = DFFE(K1_q_a[7]_PORT_A_address, K1_q_a[7]_clock_0, , , );
K1_q_a[7]_clock_0 = pClock;
K1_q_a[7]_PORT_A_data_out = MEMORY(, , K1_q_a[7]_PORT_A_address_reg, , , , , , K1_q_a[7]_clock_0, , , , , );
K1_q_a[7] = K1_q_a[7]_PORT_A_data_out[0];


--A1L57 is pInstruction~103
--operation mode is normal

A1L57 = pReset # K1_q_a[7];


--K1_q_a[8] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[8]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[8]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[8]_PORT_A_address_reg = DFFE(K1_q_a[8]_PORT_A_address, K1_q_a[8]_clock_0, , , );
K1_q_a[8]_clock_0 = pClock;
K1_q_a[8]_PORT_A_data_out = MEMORY(, , K1_q_a[8]_PORT_A_address_reg, , , , , , K1_q_a[8]_clock_0, , , , , );
K1_q_a[8] = K1_q_a[8]_PORT_A_data_out[0];


--A1L67 is pInstruction~104
--operation mode is normal

A1L67 = pReset # K1_q_a[8];


--K1_q_a[9] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[9]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[9]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[9]_PORT_A_address_reg = DFFE(K1_q_a[9]_PORT_A_address, K1_q_a[9]_clock_0, , , );
K1_q_a[9]_clock_0 = pClock;
K1_q_a[9]_PORT_A_data_out = MEMORY(, , K1_q_a[9]_PORT_A_address_reg, , , , , , K1_q_a[9]_clock_0, , , , , );
K1_q_a[9] = K1_q_a[9]_PORT_A_data_out[0];


--A1L77 is pInstruction~105
--operation mode is normal

A1L77 = pReset # K1_q_a[9];


--K1_q_a[10] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[10]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[10]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[10]_PORT_A_address_reg = DFFE(K1_q_a[10]_PORT_A_address, K1_q_a[10]_clock_0, , , );
K1_q_a[10]_clock_0 = pClock;
K1_q_a[10]_PORT_A_data_out = MEMORY(, , K1_q_a[10]_PORT_A_address_reg, , , , , , K1_q_a[10]_clock_0, , , , , );
K1_q_a[10] = K1_q_a[10]_PORT_A_data_out[0];


--A1L87 is pInstruction~106
--operation mode is normal

A1L87 = pReset # K1_q_a[10];


--K1_q_a[11] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[11]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[11]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[11]_PORT_A_address_reg = DFFE(K1_q_a[11]_PORT_A_address, K1_q_a[11]_clock_0, , , );
K1_q_a[11]_clock_0 = pClock;
K1_q_a[11]_PORT_A_data_out = MEMORY(, , K1_q_a[11]_PORT_A_address_reg, , , , , , K1_q_a[11]_clock_0, , , , , );
K1_q_a[11] = K1_q_a[11]_PORT_A_data_out[0];


--A1L97 is pInstruction~107
--operation mode is normal

A1L97 = pReset # K1_q_a[11];


--K1_q_a[12] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[12]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[12]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[12]_PORT_A_address_reg = DFFE(K1_q_a[12]_PORT_A_address, K1_q_a[12]_clock_0, , , );
K1_q_a[12]_clock_0 = pClock;
K1_q_a[12]_PORT_A_data_out = MEMORY(, , K1_q_a[12]_PORT_A_address_reg, , , , , , K1_q_a[12]_clock_0, , , , , );
K1_q_a[12] = K1_q_a[12]_PORT_A_data_out[0];


--A1L08 is pInstruction~108
--operation mode is normal

A1L08 = pReset # K1_q_a[12];


--K1_q_a[13] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[13]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[13]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[13]_PORT_A_address_reg = DFFE(K1_q_a[13]_PORT_A_address, K1_q_a[13]_clock_0, , , );
K1_q_a[13]_clock_0 = pClock;
K1_q_a[13]_PORT_A_data_out = MEMORY(, , K1_q_a[13]_PORT_A_address_reg, , , , , , K1_q_a[13]_clock_0, , , , , );
K1_q_a[13] = K1_q_a[13]_PORT_A_data_out[0];


--A1L18 is pInstruction~109
--operation mode is normal

A1L18 = pReset # K1_q_a[13];


--K1_q_a[14] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[14]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[14]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[14]_PORT_A_address_reg = DFFE(K1_q_a[14]_PORT_A_address, K1_q_a[14]_clock_0, , , );
K1_q_a[14]_clock_0 = pClock;
K1_q_a[14]_PORT_A_data_out = MEMORY(, , K1_q_a[14]_PORT_A_address_reg, , , , , , K1_q_a[14]_clock_0, , , , , );
K1_q_a[14] = K1_q_a[14]_PORT_A_data_out[0];


--A1L28 is pInstruction~110
--operation mode is normal

A1L28 = pReset # K1_q_a[14];


--K1_q_a[15] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[15]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[15]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[15]_PORT_A_address_reg = DFFE(K1_q_a[15]_PORT_A_address, K1_q_a[15]_clock_0, , , );
K1_q_a[15]_clock_0 = pClock;
K1_q_a[15]_PORT_A_data_out = MEMORY(, , K1_q_a[15]_PORT_A_address_reg, , , , , , K1_q_a[15]_clock_0, , , , , );
K1_q_a[15] = K1_q_a[15]_PORT_A_data_out[0];


--A1L38 is pInstruction~111
--operation mode is normal

A1L38 = pReset # K1_q_a[15];


--K1_q_a[16] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[16]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[16]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[16]_PORT_A_address_reg = DFFE(K1_q_a[16]_PORT_A_address, K1_q_a[16]_clock_0, , , );
K1_q_a[16]_clock_0 = pClock;
K1_q_a[16]_PORT_A_data_out = MEMORY(, , K1_q_a[16]_PORT_A_address_reg, , , , , , K1_q_a[16]_clock_0, , , , , );
K1_q_a[16] = K1_q_a[16]_PORT_A_data_out[0];


--A1L48 is pInstruction~112
--operation mode is normal

A1L48 = pReset # K1_q_a[16];


--K1_q_a[17] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[17]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[17]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[17]_PORT_A_address_reg = DFFE(K1_q_a[17]_PORT_A_address, K1_q_a[17]_clock_0, , , );
K1_q_a[17]_clock_0 = pClock;
K1_q_a[17]_PORT_A_data_out = MEMORY(, , K1_q_a[17]_PORT_A_address_reg, , , , , , K1_q_a[17]_clock_0, , , , , );
K1_q_a[17] = K1_q_a[17]_PORT_A_data_out[0];


--A1L58 is pInstruction~113
--operation mode is normal

A1L58 = pReset # K1_q_a[17];


--K1_q_a[18] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[18]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[18]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[18]_PORT_A_address_reg = DFFE(K1_q_a[18]_PORT_A_address, K1_q_a[18]_clock_0, , , );
K1_q_a[18]_clock_0 = pClock;
K1_q_a[18]_PORT_A_data_out = MEMORY(, , K1_q_a[18]_PORT_A_address_reg, , , , , , K1_q_a[18]_clock_0, , , , , );
K1_q_a[18] = K1_q_a[18]_PORT_A_data_out[0];


--A1L68 is pInstruction~114
--operation mode is normal

A1L68 = pReset # K1_q_a[18];


--K1_q_a[19] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[19]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[19]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[19]_PORT_A_address_reg = DFFE(K1_q_a[19]_PORT_A_address, K1_q_a[19]_clock_0, , , );
K1_q_a[19]_clock_0 = pClock;
K1_q_a[19]_PORT_A_data_out = MEMORY(, , K1_q_a[19]_PORT_A_address_reg, , , , , , K1_q_a[19]_clock_0, , , , , );
K1_q_a[19] = K1_q_a[19]_PORT_A_data_out[0];


--A1L78 is pInstruction~115
--operation mode is normal

A1L78 = pReset # K1_q_a[19];


--K1_q_a[20] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[20]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[20]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[20]_PORT_A_address_reg = DFFE(K1_q_a[20]_PORT_A_address, K1_q_a[20]_clock_0, , , );
K1_q_a[20]_clock_0 = pClock;
K1_q_a[20]_PORT_A_data_out = MEMORY(, , K1_q_a[20]_PORT_A_address_reg, , , , , , K1_q_a[20]_clock_0, , , , , );
K1_q_a[20] = K1_q_a[20]_PORT_A_data_out[0];


--A1L88 is pInstruction~116
--operation mode is normal

A1L88 = pReset # K1_q_a[20];


--K1_q_a[21] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[21]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[21]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[21]_PORT_A_address_reg = DFFE(K1_q_a[21]_PORT_A_address, K1_q_a[21]_clock_0, , , );
K1_q_a[21]_clock_0 = pClock;
K1_q_a[21]_PORT_A_data_out = MEMORY(, , K1_q_a[21]_PORT_A_address_reg, , , , , , K1_q_a[21]_clock_0, , , , , );
K1_q_a[21] = K1_q_a[21]_PORT_A_data_out[0];


--A1L98 is pInstruction~117
--operation mode is normal

A1L98 = pReset # K1_q_a[21];


--K1_q_a[22] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[22]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[22]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[22]_PORT_A_address_reg = DFFE(K1_q_a[22]_PORT_A_address, K1_q_a[22]_clock_0, , , );
K1_q_a[22]_clock_0 = pClock;
K1_q_a[22]_PORT_A_data_out = MEMORY(, , K1_q_a[22]_PORT_A_address_reg, , , , , , K1_q_a[22]_clock_0, , , , , );
K1_q_a[22] = K1_q_a[22]_PORT_A_data_out[0];


--A1L09 is pInstruction~118
--operation mode is normal

A1L09 = pReset # K1_q_a[22];


--K1_q_a[23] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[23]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[23]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[23]_PORT_A_address_reg = DFFE(K1_q_a[23]_PORT_A_address, K1_q_a[23]_clock_0, , , );
K1_q_a[23]_clock_0 = pClock;
K1_q_a[23]_PORT_A_data_out = MEMORY(, , K1_q_a[23]_PORT_A_address_reg, , , , , , K1_q_a[23]_clock_0, , , , , );
K1_q_a[23] = K1_q_a[23]_PORT_A_data_out[0];


--A1L19 is pInstruction~119
--operation mode is normal

A1L19 = pReset # K1_q_a[23];


--K1_q_a[24] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[24]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[24]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[24]_PORT_A_address_reg = DFFE(K1_q_a[24]_PORT_A_address, K1_q_a[24]_clock_0, , , );
K1_q_a[24]_clock_0 = pClock;
K1_q_a[24]_PORT_A_data_out = MEMORY(, , K1_q_a[24]_PORT_A_address_reg, , , , , , K1_q_a[24]_clock_0, , , , , );
K1_q_a[24] = K1_q_a[24]_PORT_A_data_out[0];


--A1L29 is pInstruction~120
--operation mode is normal

A1L29 = pReset # K1_q_a[24];


--K1_q_a[25] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[25]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[25]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[25]_PORT_A_address_reg = DFFE(K1_q_a[25]_PORT_A_address, K1_q_a[25]_clock_0, , , );
K1_q_a[25]_clock_0 = pClock;
K1_q_a[25]_PORT_A_data_out = MEMORY(, , K1_q_a[25]_PORT_A_address_reg, , , , , , K1_q_a[25]_clock_0, , , , , );
K1_q_a[25] = K1_q_a[25]_PORT_A_data_out[0];


--A1L39 is pInstruction~121
--operation mode is normal

A1L39 = pReset # K1_q_a[25];


--K1_q_a[26] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[26]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[26]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[26]_PORT_A_address_reg = DFFE(K1_q_a[26]_PORT_A_address, K1_q_a[26]_clock_0, , , );
K1_q_a[26]_clock_0 = pClock;
K1_q_a[26]_PORT_A_data_out = MEMORY(, , K1_q_a[26]_PORT_A_address_reg, , , , , , K1_q_a[26]_clock_0, , , , , );
K1_q_a[26] = K1_q_a[26]_PORT_A_data_out[0];


--A1L49 is pInstruction~122
--operation mode is normal

A1L49 = pReset # K1_q_a[26];


--K1_q_a[27] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[27]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[27]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[27]_PORT_A_address_reg = DFFE(K1_q_a[27]_PORT_A_address, K1_q_a[27]_clock_0, , , );
K1_q_a[27]_clock_0 = pClock;
K1_q_a[27]_PORT_A_data_out = MEMORY(, , K1_q_a[27]_PORT_A_address_reg, , , , , , K1_q_a[27]_clock_0, , , , , );
K1_q_a[27] = K1_q_a[27]_PORT_A_data_out[0];


--A1L59 is pInstruction~123
--operation mode is normal

A1L59 = pReset # K1_q_a[27];


--K1_q_a[28] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[28]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[28]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[28]_PORT_A_address_reg = DFFE(K1_q_a[28]_PORT_A_address, K1_q_a[28]_clock_0, , , );
K1_q_a[28]_clock_0 = pClock;
K1_q_a[28]_PORT_A_data_out = MEMORY(, , K1_q_a[28]_PORT_A_address_reg, , , , , , K1_q_a[28]_clock_0, , , , , );
K1_q_a[28] = K1_q_a[28]_PORT_A_data_out[0];


--A1L69 is pInstruction~124
--operation mode is normal

A1L69 = pReset # K1_q_a[28];


--K1_q_a[29] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[29]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[29]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[29]_PORT_A_address_reg = DFFE(K1_q_a[29]_PORT_A_address, K1_q_a[29]_clock_0, , , );
K1_q_a[29]_clock_0 = pClock;
K1_q_a[29]_PORT_A_data_out = MEMORY(, , K1_q_a[29]_PORT_A_address_reg, , , , , , K1_q_a[29]_clock_0, , , , , );
K1_q_a[29] = K1_q_a[29]_PORT_A_data_out[0];


--A1L79 is pInstruction~125
--operation mode is normal

A1L79 = pReset # K1_q_a[29];


--K1_q_a[30] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[30]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[30]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[30]_PORT_A_address_reg = DFFE(K1_q_a[30]_PORT_A_address, K1_q_a[30]_clock_0, , , );
K1_q_a[30]_clock_0 = pClock;
K1_q_a[30]_PORT_A_data_out = MEMORY(, , K1_q_a[30]_PORT_A_address_reg, , , , , , K1_q_a[30]_clock_0, , , , , );
K1_q_a[30] = K1_q_a[30]_PORT_A_data_out[0];


--A1L89 is pInstruction~126
--operation mode is normal

A1L89 = pReset # K1_q_a[30];


--K1_q_a[31] is eImem:cimem|lpm_rom:data_memory|altrom:srom|altsyncram:rom_block|altsyncram_njm:auto_generated|q_a[31]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
K1_q_a[31]_PORT_A_address = BUS(F1_pOut[2], F1_pOut[3], F1_pOut[4], F1_pOut[5], F1_pOut[6], F1_pOut[7], F1_pOut[8], F1_pOut[9]);
K1_q_a[31]_PORT_A_address_reg = DFFE(K1_q_a[31]_PORT_A_address, K1_q_a[31]_clock_0, , , );
K1_q_a[31]_clock_0 = pClock;
K1_q_a[31]_PORT_A_data_out = MEMORY(, , K1_q_a[31]_PORT_A_address_reg, , , , , , K1_q_a[31]_clock_0, , , , , );
K1_q_a[31] = K1_q_a[31]_PORT_A_data_out[0];


--A1L99 is pInstruction~127
--operation mode is normal

A1L99 = pReset # K1_q_a[31];


--F1L4 is ePC:cPC|pOut[1]~510
--operation mode is normal

F1L4 = pReset # pSelect # pJSelect;


--B1L1 is eAdd4:cadd4|add~451
--operation mode is arithmetic

B1L1 = !F1_pOut[2];

--B1L2 is eAdd4:cadd4|add~453
--operation mode is arithmetic

B1L2 = CARRY(F1_pOut[2]);


--B1L3 is eAdd4:cadd4|add~456
--operation mode is arithmetic

B1L3_carry_eqn = B1L2;
B1L3 = F1_pOut[3] $ (B1L3_carry_eqn);

--B1L4 is eAdd4:cadd4|add~458
--operation mode is arithmetic

B1L4 = CARRY(!B1L2 # !F1_pOut[3]);


--B1L5 is eAdd4:cadd4|add~461
--operation mode is arithmetic

B1L5_carry_eqn = B1L4;
B1L5 = F1_pOut[4] $ (!B1L5_carry_eqn);

--B1L6 is eAdd4:cadd4|add~463
--operation mode is arithmetic

B1L6 = CARRY(F1_pOut[4] & (!B1L4));


--B1L7 is eAdd4:cadd4|add~466
--operation mode is arithmetic

B1L7_carry_eqn = B1L6;
B1L7 = F1_pOut[5] $ (B1L7_carry_eqn);

--B1L8 is eAdd4:cadd4|add~468
--operation mode is arithmetic

B1L8 = CARRY(!B1L6 # !F1_pOut[5]);


--B1L9 is eAdd4:cadd4|add~471
--operation mode is arithmetic

B1L9_carry_eqn = B1L8;
B1L9 = F1_pOut[6] $ (!B1L9_carry_eqn);

--B1L01 is eAdd4:cadd4|add~473
--operation mode is arithmetic

B1L01 = CARRY(F1_pOut[6] & (!B1L8));


--B1L11 is eAdd4:cadd4|add~476
--operation mode is arithmetic

B1L11_carry_eqn = B1L01;
B1L11 = F1_pOut[7] $ (B1L11_carry_eqn);

--B1L21 is eAdd4:cadd4|add~478
--operation mode is arithmetic

B1L21 = CARRY(!B1L01 # !F1_pOut[7]);


--B1L31 is eAdd4:cadd4|add~481
--operation mode is arithmetic

B1L31_carry_eqn = B1L21;
B1L31 = F1_pOut[8] $ (!B1L31_carry_eqn);

--B1L41 is eAdd4:cadd4|add~483
--operation mode is arithmetic

B1L41 = CARRY(F1_pOut[8] & (!B1L21));


--B1L51 is eAdd4:cadd4|add~486
--operation mode is arithmetic

B1L51_carry_eqn = B1L41;
B1L51 = F1_pOut[9] $ (B1L51_carry_eqn);

--B1L61 is eAdd4:cadd4|add~488
--operation mode is arithmetic

B1L61 = CARRY(!B1L41 # !F1_pOut[9]);


--B1L71 is eAdd4:cadd4|add~491
--operation mode is arithmetic

B1L71_carry_eqn = B1L61;
B1L71 = F1_pOut[10] $ (!B1L71_carry_eqn);

--B1L81 is eAdd4:cadd4|add~493
--operation mode is arithmetic

B1L81 = CARRY(F1_pOut[10] & (!B1L61));


--B1L91 is eAdd4:cadd4|add~496
--operation mode is arithmetic

B1L91_carry_eqn = B1L81;
B1L91 = F1_pOut[11] $ (B1L91_carry_eqn);

--B1L02 is eAdd4:cadd4|add~498
--operation mode is arithmetic

B1L02 = CARRY(!B1L81 # !F1_pOut[11]);


--B1L12 is eAdd4:cadd4|add~501
--operation mode is arithmetic

B1L12_carry_eqn = B1L02;
B1L12 = F1_pOut[12] $ (!B1L12_carry_eqn);

--B1L22 is eAdd4:cadd4|add~503
--operation mode is arithmetic

B1L22 = CARRY(F1_pOut[12] & (!B1L02));


--B1L32 is eAdd4:cadd4|add~506
--operation mode is arithmetic

B1L32_carry_eqn = B1L22;
B1L32 = F1_pOut[13] $ (B1L32_carry_eqn);

--B1L42 is eAdd4:cadd4|add~508
--operation mode is arithmetic

B1L42 = CARRY(!B1L22 # !F1_pOut[13]);


--B1L52 is eAdd4:cadd4|add~511
--operation mode is arithmetic

B1L52_carry_eqn = B1L42;
B1L52 = F1_pOut[14] $ (!B1L52_carry_eqn);

--B1L62 is eAdd4:cadd4|add~513
--operation mode is arithmetic

B1L62 = CARRY(F1_pOut[14] & (!B1L42));


--B1L72 is eAdd4:cadd4|add~516
--operation mode is arithmetic

B1L72_carry_eqn = B1L62;
B1L72 = F1_pOut[15] $ (B1L72_carry_eqn);

--B1L82 is eAdd4:cadd4|add~518
--operation mode is arithmetic

B1L82 = CARRY(!B1L62 # !F1_pOut[15]);


--B1L92 is eAdd4:cadd4|add~521
--operation mode is arithmetic

B1L92_carry_eqn = B1L82;
B1L92 = F1_pOut[16] $ (!B1L92_carry_eqn);

--B1L03 is eAdd4:cadd4|add~523
--operation mode is arithmetic

B1L03 = CARRY(F1_pOut[16] & (!B1L82));


--B1L13 is eAdd4:cadd4|add~526
--operation mode is arithmetic

B1L13_carry_eqn = B1L03;
B1L13 = F1_pOut[17] $ (B1L13_carry_eqn);

--B1L23 is eAdd4:cadd4|add~528
--operation mode is arithmetic

B1L23 = CARRY(!B1L03 # !F1_pOut[17]);


--B1L33 is eAdd4:cadd4|add~531
--operation mode is arithmetic

B1L33_carry_eqn = B1L23;
B1L33 = F1_pOut[18] $ (!B1L33_carry_eqn);

--B1L43 is eAdd4:cadd4|add~533
--operation mode is arithmetic

B1L43 = CARRY(F1_pOut[18] & (!B1L23));


--B1L53 is eAdd4:cadd4|add~536
--operation mode is arithmetic

B1L53_carry_eqn = B1L43;
B1L53 = F1_pOut[19] $ (B1L53_carry_eqn);

--B1L63 is eAdd4:cadd4|add~538
--operation mode is arithmetic

B1L63 = CARRY(!B1L43 # !F1_pOut[19]);


--B1L73 is eAdd4:cadd4|add~541
--operation mode is arithmetic

B1L73_carry_eqn = B1L63;
B1L73 = F1_pOut[20] $ (!B1L73_carry_eqn);

--B1L83 is eAdd4:cadd4|add~543
--operation mode is arithmetic

B1L83 = CARRY(F1_pOut[20] & (!B1L63));


--B1L93 is eAdd4:cadd4|add~546
--operation mode is arithmetic

B1L93_carry_eqn = B1L83;
B1L93 = F1_pOut[21] $ (B1L93_carry_eqn);

--B1L04 is eAdd4:cadd4|add~548
--operation mode is arithmetic

B1L04 = CARRY(!B1L83 # !F1_pOut[21]);


--B1L14 is eAdd4:cadd4|add~551
--operation mode is arithmetic

B1L14_carry_eqn = B1L04;
B1L14 = F1_pOut[22] $ (!B1L14_carry_eqn);

--B1L24 is eAdd4:cadd4|add~553
--operation mode is arithmetic

B1L24 = CARRY(F1_pOut[22] & (!B1L04));


--B1L34 is eAdd4:cadd4|add~556
--operation mode is arithmetic

B1L34_carry_eqn = B1L24;
B1L34 = F1_pOut[23] $ (B1L34_carry_eqn);

--B1L44 is eAdd4:cadd4|add~558
--operation mode is arithmetic

B1L44 = CARRY(!B1L24 # !F1_pOut[23]);


--B1L54 is eAdd4:cadd4|add~561
--operation mode is arithmetic

B1L54_carry_eqn = B1L44;
B1L54 = F1_pOut[24] $ (!B1L54_carry_eqn);

--B1L64 is eAdd4:cadd4|add~563
--operation mode is arithmetic

B1L64 = CARRY(F1_pOut[24] & (!B1L44));


--B1L74 is eAdd4:cadd4|add~566
--operation mode is arithmetic

B1L74_carry_eqn = B1L64;
B1L74 = F1_pOut[25] $ (B1L74_carry_eqn);

--B1L84 is eAdd4:cadd4|add~568
--operation mode is arithmetic

B1L84 = CARRY(!B1L64 # !F1_pOut[25]);


--B1L94 is eAdd4:cadd4|add~571
--operation mode is arithmetic

B1L94_carry_eqn = B1L84;
B1L94 = F1_pOut[26] $ (!B1L94_carry_eqn);

--B1L05 is eAdd4:cadd4|add~573
--operation mode is arithmetic

B1L05 = CARRY(F1_pOut[26] & (!B1L84));


--B1L15 is eAdd4:cadd4|add~576
--operation mode is arithmetic

B1L15_carry_eqn = B1L05;
B1L15 = F1_pOut[27] $ (B1L15_carry_eqn);

--B1L25 is eAdd4:cadd4|add~578
--operation mode is arithmetic

B1L25 = CARRY(!B1L05 # !F1_pOut[27]);


--B1L35 is eAdd4:cadd4|add~581
--operation mode is arithmetic

B1L35_carry_eqn = B1L25;
B1L35 = F1_pOut[28] $ (!B1L35_carry_eqn);

--B1L45 is eAdd4:cadd4|add~583
--operation mode is arithmetic

B1L45 = CARRY(F1_pOut[28] & (!B1L25));


--F1L53 is ePC:cPC|pOut[31]~512
--operation mode is normal

F1L53 = pReset # pJSelect & (!pSelect);


--B1L55 is eAdd4:cadd4|add~586
--operation mode is arithmetic

B1L55_carry_eqn = B1L45;
B1L55 = F1_pOut[29] $ (B1L55_carry_eqn);

--B1L65 is eAdd4:cadd4|add~588
--operation mode is arithmetic

B1L65 = CARRY(!B1L45 # !F1_pOut[29]);


--B1L75 is eAdd4:cadd4|add~591
--operation mode is arithmetic

B1L75_carry_eqn = B1L65;
B1L75 = F1_pOut[30] $ (!B1L75_carry_eqn);

--B1L85 is eAdd4:cadd4|add~593
--operation mode is arithmetic

B1L85 = CARRY(F1_pOut[30] & (!B1L65));


--B1L95 is eAdd4:cadd4|add~596
--operation mode is normal

B1L95_carry_eqn = B1L85;
B1L95 = F1_pOut[31] $ (B1L95_carry_eqn);


--pReset is pReset
--operation mode is input

pReset = INPUT();


--pNextpc[0] is pNextpc[0]
--operation mode is input

pNextpc[0] = INPUT();


--pSelect is pSelect
--operation mode is input

pSelect = INPUT();


--pClock is pClock
--operation mode is input

pClock = INPUT();


--pJSelect is pJSelect
--operation mode is input

pJSelect = INPUT();


--pNextpc[1] is pNextpc[1]
--operation mode is input

pNextpc[1] = INPUT();


--pJPC[0] is pJPC[0]
--operation mode is input

pJPC[0] = INPUT();


--pNextpc[2] is pNextpc[2]
--operation mode is input

pNextpc[2] = INPUT();


--pJPC[1] is pJPC[1]
--operation mode is input

pJPC[1] = INPUT();


--pNextpc[3] is pNextpc[3]
--operation mode is input

pNextpc[3] = INPUT();


--pJPC[2] is pJPC[2]
--operation mode is input

pJPC[2] = INPUT();


--pNextpc[4] is pNextpc[4]
--operation mode is input

pNextpc[4] = INPUT();


--pJPC[3] is pJPC[3]
--operation mode is input

pJPC[3] = INPUT();


--pNextpc[5] is pNextpc[5]
--operation mode is input

pNextpc[5] = INPUT();


--pJPC[4] is pJPC[4]
--operation mode is input

pJPC[4] = INPUT();


--pNextpc[6] is pNextpc[6]
--operation mode is input

pNextpc[6] = INPUT();


--pJPC[5] is pJPC[5]
--operation mode is input

pJPC[5] = INPUT();


--pNextpc[7] is pNextpc[7]
--operation mode is input

pNextpc[7] = INPUT();


--pJPC[6] is pJPC[6]
--operation mode is input

pJPC[6] = INPUT();


--pNextpc[8] is pNextpc[8]
--operation mode is input

pNextpc[8] = INPUT();


--pJPC[7] is pJPC[7]
--operation mode is input

pJPC[7] = INPUT();


--pNextpc[9] is pNextpc[9]
--operation mode is input

pNextpc[9] = INPUT();


--pJPC[8] is pJPC[8]
--operation mode is input

pJPC[8] = INPUT();


--pNextpc[10] is pNextpc[10]
--operation mode is input

pNextpc[10] = INPUT();


--pJPC[9] is pJPC[9]
--operation mode is input

pJPC[9] = INPUT();


--pNextpc[11] is pNextpc[11]
--operation mode is input

pNextpc[11] = INPUT();


--pJPC[10] is pJPC[10]
--operation mode is input

pJPC[10] = INPUT();


--pNextpc[12] is pNextpc[12]
--operation mode is input

pNextpc[12] = INPUT();


--pJPC[11] is pJPC[11]
--operation mode is input

pJPC[11] = INPUT();


--pNextpc[13] is pNextpc[13]
--operation mode is input

pNextpc[13] = INPUT();


--pJPC[12] is pJPC[12]
--operation mode is input

pJPC[12] = INPUT();


--pNextpc[14] is pNextpc[14]
--operation mode is input

pNextpc[14] = INPUT();


--pJPC[13] is pJPC[13]
--operation mode is input

pJPC[13] = INPUT();


--pNextpc[15] is pNextpc[15]
--operation mode is input

pNextpc[15] = INPUT();


--pJPC[14] is pJPC[14]
--operation mode is input

pJPC[14] = INPUT();


--pNextpc[16] is pNextpc[16]
--operation mode is input

pNextpc[16] = INPUT();


--pJPC[15] is pJPC[15]
--operation mode is input

pJPC[15] = INPUT();


--pNextpc[17] is pNextpc[17]
--operation mode is input

pNextpc[17] = INPUT();


--pJPC[16] is pJPC[16]
--operation mode is input

pJPC[16] = INPUT();


--pNextpc[18] is pNextpc[18]
--operation mode is input

pNextpc[18] = INPUT();


--pJPC[17] is pJPC[17]
--operation mode is input

pJPC[17] = INPUT();


--pNextpc[19] is pNextpc[19]
--operation mode is input

pNextpc[19] = INPUT();


--pJPC[18] is pJPC[18]
--operation mode is input

pJPC[18] = INPUT();


--pNextpc[20] is pNextpc[20]
--operation mode is input

pNextpc[20] = INPUT();


--pJPC[19] is pJPC[19]
--operation mode is input

pJPC[19] = INPUT();


--pNextpc[21] is pNextpc[21]
--operation mode is input

pNextpc[21] = INPUT();


--pJPC[20] is pJPC[20]
--operation mode is input

pJPC[20] = INPUT();


--pNextpc[22] is pNextpc[22]
--operation mode is input

pNextpc[22] = INPUT();


--pJPC[21] is pJPC[21]
--operation mode is input

pJPC[21] = INPUT();


--pNextpc[23] is pNextpc[23]
--operation mode is input

pNextpc[23] = INPUT();


--pJPC[22] is pJPC[22]
--operation mode is input

pJPC[22] = INPUT();


--pNextpc[24] is pNextpc[24]
--operation mode is input

pNextpc[24] = INPUT();


--pJPC[23] is pJPC[23]
--operation mode is input

pJPC[23] = INPUT();


--pNextpc[25] is pNextpc[25]
--operation mode is input

pNextpc[25] = INPUT();


--pJPC[24] is pJPC[24]
--operation mode is input

pJPC[24] = INPUT();


--pNextpc[26] is pNextpc[26]
--operation mode is input

pNextpc[26] = INPUT();


--pJPC[25] is pJPC[25]
--operation mode is input

pJPC[25] = INPUT();


--pNextpc[27] is pNextpc[27]
--operation mode is input

pNextpc[27] = INPUT();


--pNextpc[28] is pNextpc[28]
--operation mode is input

pNextpc[28] = INPUT();


--pNextpc[29] is pNextpc[29]
--operation mode is input

pNextpc[29] = INPUT();


--pNextpc[30] is pNextpc[30]
--operation mode is input

pNextpc[30] = INPUT();


--pNextpc[31] is pNextpc[31]
--operation mode is input

pNextpc[31] = INPUT();


--pIncpc[0] is pIncpc[0]
--operation mode is output

pIncpc[0] = OUTPUT(F1_pOut[0]);


--pIncpc[1] is pIncpc[1]
--operation mode is output

pIncpc[1] = OUTPUT(F1_pOut[1]);


--pIncpc[2] is pIncpc[2]
--operation mode is output

pIncpc[2] = OUTPUT(F1_pOut[2]);


--pIncpc[3] is pIncpc[3]
--operation mode is output

pIncpc[3] = OUTPUT(F1_pOut[3]);


--pIncpc[4] is pIncpc[4]
--operation mode is output

pIncpc[4] = OUTPUT(F1_pOut[4]);


--pIncpc[5] is pIncpc[5]
--operation mode is output

pIncpc[5] = OUTPUT(F1_pOut[5]);


--pIncpc[6] is pIncpc[6]
--operation mode is output

pIncpc[6] = OUTPUT(F1_pOut[6]);


--pIncpc[7] is pIncpc[7]
--operation mode is output

pIncpc[7] = OUTPUT(F1_pOut[7]);


--pIncpc[8] is pIncpc[8]
--operation mode is output

pIncpc[8] = OUTPUT(F1_pOut[8]);


--pIncpc[9] is pIncpc[9]
--operation mode is output

pIncpc[9] = OUTPUT(F1_pOut[9]);


--pIncpc[10] is pIncpc[10]
--operation mode is output

pIncpc[10] = OUTPUT(F1_pOut[10]);


--pIncpc[11] is pIncpc[11]
--operation mode is output

pIncpc[11] = OUTPUT(F1_pOut[11]);


--pIncpc[12] is pIncpc[12]
--operation mode is output

pIncpc[12] = OUTPUT(F1_pOut[12]);


--pIncpc[13] is pIncpc[13]
--operation mode is output

pIncpc[13] = OUTPUT(F1_pOut[13]);


--pIncpc[14] is pIncpc[14]
--operation mode is output

pIncpc[14] = OUTPUT(F1_pOut[14]);


--pIncpc[15] is pIncpc[15]
--operation mode is output

pIncpc[15] = OUTPUT(F1_pOut[15]);


--pIncpc[16] is pIncpc[16]
--operation mode is output

pIncpc[16] = OUTPUT(F1_pOut[16]);


--pIncpc[17] is pIncpc[17]
--operation mode is output

pIncpc[17] = OUTPUT(F1_pOut[17]);


--pIncpc[18] is pIncpc[18]
--operation mode is output

pIncpc[18] = OUTPUT(F1_pOut[18]);


--pIncpc[19] is pIncpc[19]
--operation mode is output

pIncpc[19] = OUTPUT(F1_pOut[19]);


--pIncpc[20] is pIncpc[20]
--operation mode is output

pIncpc[20] = OUTPUT(F1_pOut[20]);


--pIncpc[21] is pIncpc[21]
--operation mode is output

pIncpc[21] = OUTPUT(F1_pOut[21]);


--pIncpc[22] is pIncpc[22]
--operation mode is output

pIncpc[22] = OUTPUT(F1_pOut[22]);


--pIncpc[23] is pIncpc[23]
--operation mode is output

pIncpc[23] = OUTPUT(F1_pOut[23]);


--pIncpc[24] is pIncpc[24]
--operation mode is output

pIncpc[24] = OUTPUT(F1_pOut[24]);


--pIncpc[25] is pIncpc[25]
--operation mode is output

pIncpc[25] = OUTPUT(F1_pOut[25]);


--pIncpc[26] is pIncpc[26]
--operation mode is output

pIncpc[26] = OUTPUT(F1_pOut[26]);


--pIncpc[27] is pIncpc[27]
--operation mode is output

pIncpc[27] = OUTPUT(F1_pOut[27]);


--pIncpc[28] is pIncpc[28]
--operation mode is output

pIncpc[28] = OUTPUT(F1_pOut[28]);


--pIncpc[29] is pIncpc[29]
--operation mode is output

pIncpc[29] = OUTPUT(F1_pOut[29]);


--pIncpc[30] is pIncpc[30]
--operation mode is output

pIncpc[30] = OUTPUT(F1_pOut[30]);


--pIncpc[31] is pIncpc[31]
--operation mode is output

pIncpc[31] = OUTPUT(F1_pOut[31]);


--pInstruction[0] is pInstruction[0]
--operation mode is output

pInstruction[0] = OUTPUT(A1L86);


--pInstruction[1] is pInstruction[1]
--operation mode is output

pInstruction[1] = OUTPUT(A1L96);


--pInstruction[2] is pInstruction[2]
--operation mode is output

pInstruction[2] = OUTPUT(A1L07);


--pInstruction[3] is pInstruction[3]
--operation mode is output

pInstruction[3] = OUTPUT(A1L17);


--pInstruction[4] is pInstruction[4]
--operation mode is output

pInstruction[4] = OUTPUT(A1L27);


--pInstruction[5] is pInstruction[5]
--operation mode is output

pInstruction[5] = OUTPUT(A1L37);


--pInstruction[6] is pInstruction[6]
--operation mode is output

pInstruction[6] = OUTPUT(A1L47);


--pInstruction[7] is pInstruction[7]
--operation mode is output

pInstruction[7] = OUTPUT(A1L57);


--pInstruction[8] is pInstruction[8]
--operation mode is output

pInstruction[8] = OUTPUT(A1L67);


--pInstruction[9] is pInstruction[9]
--operation mode is output

pInstruction[9] = OUTPUT(A1L77);


--pInstruction[10] is pInstruction[10]
--operation mode is output

pInstruction[10] = OUTPUT(A1L87);


--pInstruction[11] is pInstruction[11]
--operation mode is output

pInstruction[11] = OUTPUT(A1L97);


--pInstruction[12] is pInstruction[12]
--operation mode is output

pInstruction[12] = OUTPUT(A1L08);


--pInstruction[13] is pInstruction[13]
--operation mode is output

pInstruction[13] = OUTPUT(A1L18);


--pInstruction[14] is pInstruction[14]
--operation mode is output

pInstruction[14] = OUTPUT(A1L28);


--pInstruction[15] is pInstruction[15]
--operation mode is output

pInstruction[15] = OUTPUT(A1L38);


--pInstruction[16] is pInstruction[16]
--operation mode is output

pInstruction[16] = OUTPUT(A1L48);


--pInstruction[17] is pInstruction[17]
--operation mode is output

pInstruction[17] = OUTPUT(A1L58);


--pInstruction[18] is pInstruction[18]
--operation mode is output

pInstruction[18] = OUTPUT(A1L68);


--pInstruction[19] is pInstruction[19]
--operation mode is output

pInstruction[19] = OUTPUT(A1L78);


--pInstruction[20] is pInstruction[20]
--operation mode is output

pInstruction[20] = OUTPUT(A1L88);


--pInstruction[21] is pInstruction[21]
--operation mode is output

pInstruction[21] = OUTPUT(A1L98);


--pInstruction[22] is pInstruction[22]
--operation mode is output

pInstruction[22] = OUTPUT(A1L09);


--pInstruction[23] is pInstruction[23]
--operation mode is output

pInstruction[23] = OUTPUT(A1L19);


--pInstruction[24] is pInstruction[24]
--operation mode is output

pInstruction[24] = OUTPUT(A1L29);


--pInstruction[25] is pInstruction[25]
--operation mode is output

pInstruction[25] = OUTPUT(A1L39);


--pInstruction[26] is pInstruction[26]
--operation mode is output

pInstruction[26] = OUTPUT(A1L49);


--pInstruction[27] is pInstruction[27]
--operation mode is output

pInstruction[27] = OUTPUT(A1L59);


--pInstruction[28] is pInstruction[28]
--operation mode is output

pInstruction[28] = OUTPUT(A1L69);


--pInstruction[29] is pInstruction[29]
--operation mode is output

pInstruction[29] = OUTPUT(A1L79);


--pInstruction[30] is pInstruction[30]
--operation mode is output

pInstruction[30] = OUTPUT(A1L89);


--pInstruction[31] is pInstruction[31]
--operation mode is output

pInstruction[31] = OUTPUT(A1L99);


