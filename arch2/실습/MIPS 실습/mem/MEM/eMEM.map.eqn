-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--F1_q_a[0] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[0]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[0]_PORT_A_data_in = pWriteData[0];
F1_q_a[0]_PORT_A_data_in_reg = DFFE(F1_q_a[0]_PORT_A_data_in, F1_q_a[0]_clock_0, , , );
F1_q_a[0]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[0]_PORT_A_address_reg = DFFE(F1_q_a[0]_PORT_A_address, F1_q_a[0]_clock_0, , , );
F1_q_a[0]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[0]_PORT_B_address_reg = DFFE(F1_q_a[0]_PORT_B_address, F1_q_a[0]_clock_0, , , );
F1_q_a[0]_PORT_A_write_enable = pControl_in[1];
F1_q_a[0]_PORT_A_write_enable_reg = DFFE(F1_q_a[0]_PORT_A_write_enable, F1_q_a[0]_clock_0, , , );
F1_q_a[0]_clock_0 = !pClock;
F1_q_a[0]_PORT_A_data_out = MEMORY(F1_q_a[0]_PORT_A_data_in_reg, , F1_q_a[0]_PORT_A_address_reg, F1_q_a[0]_PORT_B_address_reg, F1_q_a[0]_PORT_A_write_enable_reg, , , , F1_q_a[0]_clock_0, , , , , );
F1_q_a[0] = F1_q_a[0]_PORT_A_data_out[0];


--F1_q_a[1] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[1]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[1]_PORT_A_data_in = pWriteData[1];
F1_q_a[1]_PORT_A_data_in_reg = DFFE(F1_q_a[1]_PORT_A_data_in, F1_q_a[1]_clock_0, , , );
F1_q_a[1]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[1]_PORT_A_address_reg = DFFE(F1_q_a[1]_PORT_A_address, F1_q_a[1]_clock_0, , , );
F1_q_a[1]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[1]_PORT_B_address_reg = DFFE(F1_q_a[1]_PORT_B_address, F1_q_a[1]_clock_0, , , );
F1_q_a[1]_PORT_A_write_enable = pControl_in[1];
F1_q_a[1]_PORT_A_write_enable_reg = DFFE(F1_q_a[1]_PORT_A_write_enable, F1_q_a[1]_clock_0, , , );
F1_q_a[1]_clock_0 = !pClock;
F1_q_a[1]_PORT_A_data_out = MEMORY(F1_q_a[1]_PORT_A_data_in_reg, , F1_q_a[1]_PORT_A_address_reg, F1_q_a[1]_PORT_B_address_reg, F1_q_a[1]_PORT_A_write_enable_reg, , , , F1_q_a[1]_clock_0, , , , , );
F1_q_a[1] = F1_q_a[1]_PORT_A_data_out[0];


--F1_q_a[2] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[2]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[2]_PORT_A_data_in = pWriteData[2];
F1_q_a[2]_PORT_A_data_in_reg = DFFE(F1_q_a[2]_PORT_A_data_in, F1_q_a[2]_clock_0, , , );
F1_q_a[2]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[2]_PORT_A_address_reg = DFFE(F1_q_a[2]_PORT_A_address, F1_q_a[2]_clock_0, , , );
F1_q_a[2]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[2]_PORT_B_address_reg = DFFE(F1_q_a[2]_PORT_B_address, F1_q_a[2]_clock_0, , , );
F1_q_a[2]_PORT_A_write_enable = pControl_in[1];
F1_q_a[2]_PORT_A_write_enable_reg = DFFE(F1_q_a[2]_PORT_A_write_enable, F1_q_a[2]_clock_0, , , );
F1_q_a[2]_clock_0 = !pClock;
F1_q_a[2]_PORT_A_data_out = MEMORY(F1_q_a[2]_PORT_A_data_in_reg, , F1_q_a[2]_PORT_A_address_reg, F1_q_a[2]_PORT_B_address_reg, F1_q_a[2]_PORT_A_write_enable_reg, , , , F1_q_a[2]_clock_0, , , , , );
F1_q_a[2] = F1_q_a[2]_PORT_A_data_out[0];


--F1_q_a[3] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[3]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[3]_PORT_A_data_in = pWriteData[3];
F1_q_a[3]_PORT_A_data_in_reg = DFFE(F1_q_a[3]_PORT_A_data_in, F1_q_a[3]_clock_0, , , );
F1_q_a[3]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[3]_PORT_A_address_reg = DFFE(F1_q_a[3]_PORT_A_address, F1_q_a[3]_clock_0, , , );
F1_q_a[3]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[3]_PORT_B_address_reg = DFFE(F1_q_a[3]_PORT_B_address, F1_q_a[3]_clock_0, , , );
F1_q_a[3]_PORT_A_write_enable = pControl_in[1];
F1_q_a[3]_PORT_A_write_enable_reg = DFFE(F1_q_a[3]_PORT_A_write_enable, F1_q_a[3]_clock_0, , , );
F1_q_a[3]_clock_0 = !pClock;
F1_q_a[3]_PORT_A_data_out = MEMORY(F1_q_a[3]_PORT_A_data_in_reg, , F1_q_a[3]_PORT_A_address_reg, F1_q_a[3]_PORT_B_address_reg, F1_q_a[3]_PORT_A_write_enable_reg, , , , F1_q_a[3]_clock_0, , , , , );
F1_q_a[3] = F1_q_a[3]_PORT_A_data_out[0];


--F1_q_a[4] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[4]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[4]_PORT_A_data_in = pWriteData[4];
F1_q_a[4]_PORT_A_data_in_reg = DFFE(F1_q_a[4]_PORT_A_data_in, F1_q_a[4]_clock_0, , , );
F1_q_a[4]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[4]_PORT_A_address_reg = DFFE(F1_q_a[4]_PORT_A_address, F1_q_a[4]_clock_0, , , );
F1_q_a[4]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[4]_PORT_B_address_reg = DFFE(F1_q_a[4]_PORT_B_address, F1_q_a[4]_clock_0, , , );
F1_q_a[4]_PORT_A_write_enable = pControl_in[1];
F1_q_a[4]_PORT_A_write_enable_reg = DFFE(F1_q_a[4]_PORT_A_write_enable, F1_q_a[4]_clock_0, , , );
F1_q_a[4]_clock_0 = !pClock;
F1_q_a[4]_PORT_A_data_out = MEMORY(F1_q_a[4]_PORT_A_data_in_reg, , F1_q_a[4]_PORT_A_address_reg, F1_q_a[4]_PORT_B_address_reg, F1_q_a[4]_PORT_A_write_enable_reg, , , , F1_q_a[4]_clock_0, , , , , );
F1_q_a[4] = F1_q_a[4]_PORT_A_data_out[0];


--F1_q_a[5] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[5]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[5]_PORT_A_data_in = pWriteData[5];
F1_q_a[5]_PORT_A_data_in_reg = DFFE(F1_q_a[5]_PORT_A_data_in, F1_q_a[5]_clock_0, , , );
F1_q_a[5]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[5]_PORT_A_address_reg = DFFE(F1_q_a[5]_PORT_A_address, F1_q_a[5]_clock_0, , , );
F1_q_a[5]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[5]_PORT_B_address_reg = DFFE(F1_q_a[5]_PORT_B_address, F1_q_a[5]_clock_0, , , );
F1_q_a[5]_PORT_A_write_enable = pControl_in[1];
F1_q_a[5]_PORT_A_write_enable_reg = DFFE(F1_q_a[5]_PORT_A_write_enable, F1_q_a[5]_clock_0, , , );
F1_q_a[5]_clock_0 = !pClock;
F1_q_a[5]_PORT_A_data_out = MEMORY(F1_q_a[5]_PORT_A_data_in_reg, , F1_q_a[5]_PORT_A_address_reg, F1_q_a[5]_PORT_B_address_reg, F1_q_a[5]_PORT_A_write_enable_reg, , , , F1_q_a[5]_clock_0, , , , , );
F1_q_a[5] = F1_q_a[5]_PORT_A_data_out[0];


--F1_q_a[6] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[6]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[6]_PORT_A_data_in = pWriteData[6];
F1_q_a[6]_PORT_A_data_in_reg = DFFE(F1_q_a[6]_PORT_A_data_in, F1_q_a[6]_clock_0, , , );
F1_q_a[6]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[6]_PORT_A_address_reg = DFFE(F1_q_a[6]_PORT_A_address, F1_q_a[6]_clock_0, , , );
F1_q_a[6]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[6]_PORT_B_address_reg = DFFE(F1_q_a[6]_PORT_B_address, F1_q_a[6]_clock_0, , , );
F1_q_a[6]_PORT_A_write_enable = pControl_in[1];
F1_q_a[6]_PORT_A_write_enable_reg = DFFE(F1_q_a[6]_PORT_A_write_enable, F1_q_a[6]_clock_0, , , );
F1_q_a[6]_clock_0 = !pClock;
F1_q_a[6]_PORT_A_data_out = MEMORY(F1_q_a[6]_PORT_A_data_in_reg, , F1_q_a[6]_PORT_A_address_reg, F1_q_a[6]_PORT_B_address_reg, F1_q_a[6]_PORT_A_write_enable_reg, , , , F1_q_a[6]_clock_0, , , , , );
F1_q_a[6] = F1_q_a[6]_PORT_A_data_out[0];


--F1_q_a[7] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[7]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[7]_PORT_A_data_in = pWriteData[7];
F1_q_a[7]_PORT_A_data_in_reg = DFFE(F1_q_a[7]_PORT_A_data_in, F1_q_a[7]_clock_0, , , );
F1_q_a[7]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[7]_PORT_A_address_reg = DFFE(F1_q_a[7]_PORT_A_address, F1_q_a[7]_clock_0, , , );
F1_q_a[7]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[7]_PORT_B_address_reg = DFFE(F1_q_a[7]_PORT_B_address, F1_q_a[7]_clock_0, , , );
F1_q_a[7]_PORT_A_write_enable = pControl_in[1];
F1_q_a[7]_PORT_A_write_enable_reg = DFFE(F1_q_a[7]_PORT_A_write_enable, F1_q_a[7]_clock_0, , , );
F1_q_a[7]_clock_0 = !pClock;
F1_q_a[7]_PORT_A_data_out = MEMORY(F1_q_a[7]_PORT_A_data_in_reg, , F1_q_a[7]_PORT_A_address_reg, F1_q_a[7]_PORT_B_address_reg, F1_q_a[7]_PORT_A_write_enable_reg, , , , F1_q_a[7]_clock_0, , , , , );
F1_q_a[7] = F1_q_a[7]_PORT_A_data_out[0];


--F1_q_a[8] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[8]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[8]_PORT_A_data_in = pWriteData[8];
F1_q_a[8]_PORT_A_data_in_reg = DFFE(F1_q_a[8]_PORT_A_data_in, F1_q_a[8]_clock_0, , , );
F1_q_a[8]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[8]_PORT_A_address_reg = DFFE(F1_q_a[8]_PORT_A_address, F1_q_a[8]_clock_0, , , );
F1_q_a[8]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[8]_PORT_B_address_reg = DFFE(F1_q_a[8]_PORT_B_address, F1_q_a[8]_clock_0, , , );
F1_q_a[8]_PORT_A_write_enable = pControl_in[1];
F1_q_a[8]_PORT_A_write_enable_reg = DFFE(F1_q_a[8]_PORT_A_write_enable, F1_q_a[8]_clock_0, , , );
F1_q_a[8]_clock_0 = !pClock;
F1_q_a[8]_PORT_A_data_out = MEMORY(F1_q_a[8]_PORT_A_data_in_reg, , F1_q_a[8]_PORT_A_address_reg, F1_q_a[8]_PORT_B_address_reg, F1_q_a[8]_PORT_A_write_enable_reg, , , , F1_q_a[8]_clock_0, , , , , );
F1_q_a[8] = F1_q_a[8]_PORT_A_data_out[0];


--F1_q_a[9] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[9]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[9]_PORT_A_data_in = pWriteData[9];
F1_q_a[9]_PORT_A_data_in_reg = DFFE(F1_q_a[9]_PORT_A_data_in, F1_q_a[9]_clock_0, , , );
F1_q_a[9]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[9]_PORT_A_address_reg = DFFE(F1_q_a[9]_PORT_A_address, F1_q_a[9]_clock_0, , , );
F1_q_a[9]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[9]_PORT_B_address_reg = DFFE(F1_q_a[9]_PORT_B_address, F1_q_a[9]_clock_0, , , );
F1_q_a[9]_PORT_A_write_enable = pControl_in[1];
F1_q_a[9]_PORT_A_write_enable_reg = DFFE(F1_q_a[9]_PORT_A_write_enable, F1_q_a[9]_clock_0, , , );
F1_q_a[9]_clock_0 = !pClock;
F1_q_a[9]_PORT_A_data_out = MEMORY(F1_q_a[9]_PORT_A_data_in_reg, , F1_q_a[9]_PORT_A_address_reg, F1_q_a[9]_PORT_B_address_reg, F1_q_a[9]_PORT_A_write_enable_reg, , , , F1_q_a[9]_clock_0, , , , , );
F1_q_a[9] = F1_q_a[9]_PORT_A_data_out[0];


--F1_q_a[10] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[10]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[10]_PORT_A_data_in = pWriteData[10];
F1_q_a[10]_PORT_A_data_in_reg = DFFE(F1_q_a[10]_PORT_A_data_in, F1_q_a[10]_clock_0, , , );
F1_q_a[10]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[10]_PORT_A_address_reg = DFFE(F1_q_a[10]_PORT_A_address, F1_q_a[10]_clock_0, , , );
F1_q_a[10]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[10]_PORT_B_address_reg = DFFE(F1_q_a[10]_PORT_B_address, F1_q_a[10]_clock_0, , , );
F1_q_a[10]_PORT_A_write_enable = pControl_in[1];
F1_q_a[10]_PORT_A_write_enable_reg = DFFE(F1_q_a[10]_PORT_A_write_enable, F1_q_a[10]_clock_0, , , );
F1_q_a[10]_clock_0 = !pClock;
F1_q_a[10]_PORT_A_data_out = MEMORY(F1_q_a[10]_PORT_A_data_in_reg, , F1_q_a[10]_PORT_A_address_reg, F1_q_a[10]_PORT_B_address_reg, F1_q_a[10]_PORT_A_write_enable_reg, , , , F1_q_a[10]_clock_0, , , , , );
F1_q_a[10] = F1_q_a[10]_PORT_A_data_out[0];


--F1_q_a[11] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[11]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[11]_PORT_A_data_in = pWriteData[11];
F1_q_a[11]_PORT_A_data_in_reg = DFFE(F1_q_a[11]_PORT_A_data_in, F1_q_a[11]_clock_0, , , );
F1_q_a[11]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[11]_PORT_A_address_reg = DFFE(F1_q_a[11]_PORT_A_address, F1_q_a[11]_clock_0, , , );
F1_q_a[11]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[11]_PORT_B_address_reg = DFFE(F1_q_a[11]_PORT_B_address, F1_q_a[11]_clock_0, , , );
F1_q_a[11]_PORT_A_write_enable = pControl_in[1];
F1_q_a[11]_PORT_A_write_enable_reg = DFFE(F1_q_a[11]_PORT_A_write_enable, F1_q_a[11]_clock_0, , , );
F1_q_a[11]_clock_0 = !pClock;
F1_q_a[11]_PORT_A_data_out = MEMORY(F1_q_a[11]_PORT_A_data_in_reg, , F1_q_a[11]_PORT_A_address_reg, F1_q_a[11]_PORT_B_address_reg, F1_q_a[11]_PORT_A_write_enable_reg, , , , F1_q_a[11]_clock_0, , , , , );
F1_q_a[11] = F1_q_a[11]_PORT_A_data_out[0];


--F1_q_a[12] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[12]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[12]_PORT_A_data_in = pWriteData[12];
F1_q_a[12]_PORT_A_data_in_reg = DFFE(F1_q_a[12]_PORT_A_data_in, F1_q_a[12]_clock_0, , , );
F1_q_a[12]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[12]_PORT_A_address_reg = DFFE(F1_q_a[12]_PORT_A_address, F1_q_a[12]_clock_0, , , );
F1_q_a[12]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[12]_PORT_B_address_reg = DFFE(F1_q_a[12]_PORT_B_address, F1_q_a[12]_clock_0, , , );
F1_q_a[12]_PORT_A_write_enable = pControl_in[1];
F1_q_a[12]_PORT_A_write_enable_reg = DFFE(F1_q_a[12]_PORT_A_write_enable, F1_q_a[12]_clock_0, , , );
F1_q_a[12]_clock_0 = !pClock;
F1_q_a[12]_PORT_A_data_out = MEMORY(F1_q_a[12]_PORT_A_data_in_reg, , F1_q_a[12]_PORT_A_address_reg, F1_q_a[12]_PORT_B_address_reg, F1_q_a[12]_PORT_A_write_enable_reg, , , , F1_q_a[12]_clock_0, , , , , );
F1_q_a[12] = F1_q_a[12]_PORT_A_data_out[0];


--F1_q_a[13] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[13]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[13]_PORT_A_data_in = pWriteData[13];
F1_q_a[13]_PORT_A_data_in_reg = DFFE(F1_q_a[13]_PORT_A_data_in, F1_q_a[13]_clock_0, , , );
F1_q_a[13]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[13]_PORT_A_address_reg = DFFE(F1_q_a[13]_PORT_A_address, F1_q_a[13]_clock_0, , , );
F1_q_a[13]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[13]_PORT_B_address_reg = DFFE(F1_q_a[13]_PORT_B_address, F1_q_a[13]_clock_0, , , );
F1_q_a[13]_PORT_A_write_enable = pControl_in[1];
F1_q_a[13]_PORT_A_write_enable_reg = DFFE(F1_q_a[13]_PORT_A_write_enable, F1_q_a[13]_clock_0, , , );
F1_q_a[13]_clock_0 = !pClock;
F1_q_a[13]_PORT_A_data_out = MEMORY(F1_q_a[13]_PORT_A_data_in_reg, , F1_q_a[13]_PORT_A_address_reg, F1_q_a[13]_PORT_B_address_reg, F1_q_a[13]_PORT_A_write_enable_reg, , , , F1_q_a[13]_clock_0, , , , , );
F1_q_a[13] = F1_q_a[13]_PORT_A_data_out[0];


--F1_q_a[14] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[14]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[14]_PORT_A_data_in = pWriteData[14];
F1_q_a[14]_PORT_A_data_in_reg = DFFE(F1_q_a[14]_PORT_A_data_in, F1_q_a[14]_clock_0, , , );
F1_q_a[14]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[14]_PORT_A_address_reg = DFFE(F1_q_a[14]_PORT_A_address, F1_q_a[14]_clock_0, , , );
F1_q_a[14]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[14]_PORT_B_address_reg = DFFE(F1_q_a[14]_PORT_B_address, F1_q_a[14]_clock_0, , , );
F1_q_a[14]_PORT_A_write_enable = pControl_in[1];
F1_q_a[14]_PORT_A_write_enable_reg = DFFE(F1_q_a[14]_PORT_A_write_enable, F1_q_a[14]_clock_0, , , );
F1_q_a[14]_clock_0 = !pClock;
F1_q_a[14]_PORT_A_data_out = MEMORY(F1_q_a[14]_PORT_A_data_in_reg, , F1_q_a[14]_PORT_A_address_reg, F1_q_a[14]_PORT_B_address_reg, F1_q_a[14]_PORT_A_write_enable_reg, , , , F1_q_a[14]_clock_0, , , , , );
F1_q_a[14] = F1_q_a[14]_PORT_A_data_out[0];


--F1_q_a[15] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[15]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[15]_PORT_A_data_in = pWriteData[15];
F1_q_a[15]_PORT_A_data_in_reg = DFFE(F1_q_a[15]_PORT_A_data_in, F1_q_a[15]_clock_0, , , );
F1_q_a[15]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[15]_PORT_A_address_reg = DFFE(F1_q_a[15]_PORT_A_address, F1_q_a[15]_clock_0, , , );
F1_q_a[15]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[15]_PORT_B_address_reg = DFFE(F1_q_a[15]_PORT_B_address, F1_q_a[15]_clock_0, , , );
F1_q_a[15]_PORT_A_write_enable = pControl_in[1];
F1_q_a[15]_PORT_A_write_enable_reg = DFFE(F1_q_a[15]_PORT_A_write_enable, F1_q_a[15]_clock_0, , , );
F1_q_a[15]_clock_0 = !pClock;
F1_q_a[15]_PORT_A_data_out = MEMORY(F1_q_a[15]_PORT_A_data_in_reg, , F1_q_a[15]_PORT_A_address_reg, F1_q_a[15]_PORT_B_address_reg, F1_q_a[15]_PORT_A_write_enable_reg, , , , F1_q_a[15]_clock_0, , , , , );
F1_q_a[15] = F1_q_a[15]_PORT_A_data_out[0];


--F1_q_a[16] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[16]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[16]_PORT_A_data_in = pWriteData[16];
F1_q_a[16]_PORT_A_data_in_reg = DFFE(F1_q_a[16]_PORT_A_data_in, F1_q_a[16]_clock_0, , , );
F1_q_a[16]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[16]_PORT_A_address_reg = DFFE(F1_q_a[16]_PORT_A_address, F1_q_a[16]_clock_0, , , );
F1_q_a[16]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[16]_PORT_B_address_reg = DFFE(F1_q_a[16]_PORT_B_address, F1_q_a[16]_clock_0, , , );
F1_q_a[16]_PORT_A_write_enable = pControl_in[1];
F1_q_a[16]_PORT_A_write_enable_reg = DFFE(F1_q_a[16]_PORT_A_write_enable, F1_q_a[16]_clock_0, , , );
F1_q_a[16]_clock_0 = !pClock;
F1_q_a[16]_PORT_A_data_out = MEMORY(F1_q_a[16]_PORT_A_data_in_reg, , F1_q_a[16]_PORT_A_address_reg, F1_q_a[16]_PORT_B_address_reg, F1_q_a[16]_PORT_A_write_enable_reg, , , , F1_q_a[16]_clock_0, , , , , );
F1_q_a[16] = F1_q_a[16]_PORT_A_data_out[0];


--F1_q_a[17] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[17]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[17]_PORT_A_data_in = pWriteData[17];
F1_q_a[17]_PORT_A_data_in_reg = DFFE(F1_q_a[17]_PORT_A_data_in, F1_q_a[17]_clock_0, , , );
F1_q_a[17]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[17]_PORT_A_address_reg = DFFE(F1_q_a[17]_PORT_A_address, F1_q_a[17]_clock_0, , , );
F1_q_a[17]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[17]_PORT_B_address_reg = DFFE(F1_q_a[17]_PORT_B_address, F1_q_a[17]_clock_0, , , );
F1_q_a[17]_PORT_A_write_enable = pControl_in[1];
F1_q_a[17]_PORT_A_write_enable_reg = DFFE(F1_q_a[17]_PORT_A_write_enable, F1_q_a[17]_clock_0, , , );
F1_q_a[17]_clock_0 = !pClock;
F1_q_a[17]_PORT_A_data_out = MEMORY(F1_q_a[17]_PORT_A_data_in_reg, , F1_q_a[17]_PORT_A_address_reg, F1_q_a[17]_PORT_B_address_reg, F1_q_a[17]_PORT_A_write_enable_reg, , , , F1_q_a[17]_clock_0, , , , , );
F1_q_a[17] = F1_q_a[17]_PORT_A_data_out[0];


--F1_q_a[18] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[18]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[18]_PORT_A_data_in = pWriteData[18];
F1_q_a[18]_PORT_A_data_in_reg = DFFE(F1_q_a[18]_PORT_A_data_in, F1_q_a[18]_clock_0, , , );
F1_q_a[18]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[18]_PORT_A_address_reg = DFFE(F1_q_a[18]_PORT_A_address, F1_q_a[18]_clock_0, , , );
F1_q_a[18]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[18]_PORT_B_address_reg = DFFE(F1_q_a[18]_PORT_B_address, F1_q_a[18]_clock_0, , , );
F1_q_a[18]_PORT_A_write_enable = pControl_in[1];
F1_q_a[18]_PORT_A_write_enable_reg = DFFE(F1_q_a[18]_PORT_A_write_enable, F1_q_a[18]_clock_0, , , );
F1_q_a[18]_clock_0 = !pClock;
F1_q_a[18]_PORT_A_data_out = MEMORY(F1_q_a[18]_PORT_A_data_in_reg, , F1_q_a[18]_PORT_A_address_reg, F1_q_a[18]_PORT_B_address_reg, F1_q_a[18]_PORT_A_write_enable_reg, , , , F1_q_a[18]_clock_0, , , , , );
F1_q_a[18] = F1_q_a[18]_PORT_A_data_out[0];


--F1_q_a[19] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[19]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[19]_PORT_A_data_in = pWriteData[19];
F1_q_a[19]_PORT_A_data_in_reg = DFFE(F1_q_a[19]_PORT_A_data_in, F1_q_a[19]_clock_0, , , );
F1_q_a[19]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[19]_PORT_A_address_reg = DFFE(F1_q_a[19]_PORT_A_address, F1_q_a[19]_clock_0, , , );
F1_q_a[19]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[19]_PORT_B_address_reg = DFFE(F1_q_a[19]_PORT_B_address, F1_q_a[19]_clock_0, , , );
F1_q_a[19]_PORT_A_write_enable = pControl_in[1];
F1_q_a[19]_PORT_A_write_enable_reg = DFFE(F1_q_a[19]_PORT_A_write_enable, F1_q_a[19]_clock_0, , , );
F1_q_a[19]_clock_0 = !pClock;
F1_q_a[19]_PORT_A_data_out = MEMORY(F1_q_a[19]_PORT_A_data_in_reg, , F1_q_a[19]_PORT_A_address_reg, F1_q_a[19]_PORT_B_address_reg, F1_q_a[19]_PORT_A_write_enable_reg, , , , F1_q_a[19]_clock_0, , , , , );
F1_q_a[19] = F1_q_a[19]_PORT_A_data_out[0];


--F1_q_a[20] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[20]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[20]_PORT_A_data_in = pWriteData[20];
F1_q_a[20]_PORT_A_data_in_reg = DFFE(F1_q_a[20]_PORT_A_data_in, F1_q_a[20]_clock_0, , , );
F1_q_a[20]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[20]_PORT_A_address_reg = DFFE(F1_q_a[20]_PORT_A_address, F1_q_a[20]_clock_0, , , );
F1_q_a[20]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[20]_PORT_B_address_reg = DFFE(F1_q_a[20]_PORT_B_address, F1_q_a[20]_clock_0, , , );
F1_q_a[20]_PORT_A_write_enable = pControl_in[1];
F1_q_a[20]_PORT_A_write_enable_reg = DFFE(F1_q_a[20]_PORT_A_write_enable, F1_q_a[20]_clock_0, , , );
F1_q_a[20]_clock_0 = !pClock;
F1_q_a[20]_PORT_A_data_out = MEMORY(F1_q_a[20]_PORT_A_data_in_reg, , F1_q_a[20]_PORT_A_address_reg, F1_q_a[20]_PORT_B_address_reg, F1_q_a[20]_PORT_A_write_enable_reg, , , , F1_q_a[20]_clock_0, , , , , );
F1_q_a[20] = F1_q_a[20]_PORT_A_data_out[0];


--F1_q_a[21] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[21]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[21]_PORT_A_data_in = pWriteData[21];
F1_q_a[21]_PORT_A_data_in_reg = DFFE(F1_q_a[21]_PORT_A_data_in, F1_q_a[21]_clock_0, , , );
F1_q_a[21]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[21]_PORT_A_address_reg = DFFE(F1_q_a[21]_PORT_A_address, F1_q_a[21]_clock_0, , , );
F1_q_a[21]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[21]_PORT_B_address_reg = DFFE(F1_q_a[21]_PORT_B_address, F1_q_a[21]_clock_0, , , );
F1_q_a[21]_PORT_A_write_enable = pControl_in[1];
F1_q_a[21]_PORT_A_write_enable_reg = DFFE(F1_q_a[21]_PORT_A_write_enable, F1_q_a[21]_clock_0, , , );
F1_q_a[21]_clock_0 = !pClock;
F1_q_a[21]_PORT_A_data_out = MEMORY(F1_q_a[21]_PORT_A_data_in_reg, , F1_q_a[21]_PORT_A_address_reg, F1_q_a[21]_PORT_B_address_reg, F1_q_a[21]_PORT_A_write_enable_reg, , , , F1_q_a[21]_clock_0, , , , , );
F1_q_a[21] = F1_q_a[21]_PORT_A_data_out[0];


--F1_q_a[22] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[22]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[22]_PORT_A_data_in = pWriteData[22];
F1_q_a[22]_PORT_A_data_in_reg = DFFE(F1_q_a[22]_PORT_A_data_in, F1_q_a[22]_clock_0, , , );
F1_q_a[22]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[22]_PORT_A_address_reg = DFFE(F1_q_a[22]_PORT_A_address, F1_q_a[22]_clock_0, , , );
F1_q_a[22]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[22]_PORT_B_address_reg = DFFE(F1_q_a[22]_PORT_B_address, F1_q_a[22]_clock_0, , , );
F1_q_a[22]_PORT_A_write_enable = pControl_in[1];
F1_q_a[22]_PORT_A_write_enable_reg = DFFE(F1_q_a[22]_PORT_A_write_enable, F1_q_a[22]_clock_0, , , );
F1_q_a[22]_clock_0 = !pClock;
F1_q_a[22]_PORT_A_data_out = MEMORY(F1_q_a[22]_PORT_A_data_in_reg, , F1_q_a[22]_PORT_A_address_reg, F1_q_a[22]_PORT_B_address_reg, F1_q_a[22]_PORT_A_write_enable_reg, , , , F1_q_a[22]_clock_0, , , , , );
F1_q_a[22] = F1_q_a[22]_PORT_A_data_out[0];


--F1_q_a[23] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[23]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[23]_PORT_A_data_in = pWriteData[23];
F1_q_a[23]_PORT_A_data_in_reg = DFFE(F1_q_a[23]_PORT_A_data_in, F1_q_a[23]_clock_0, , , );
F1_q_a[23]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[23]_PORT_A_address_reg = DFFE(F1_q_a[23]_PORT_A_address, F1_q_a[23]_clock_0, , , );
F1_q_a[23]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[23]_PORT_B_address_reg = DFFE(F1_q_a[23]_PORT_B_address, F1_q_a[23]_clock_0, , , );
F1_q_a[23]_PORT_A_write_enable = pControl_in[1];
F1_q_a[23]_PORT_A_write_enable_reg = DFFE(F1_q_a[23]_PORT_A_write_enable, F1_q_a[23]_clock_0, , , );
F1_q_a[23]_clock_0 = !pClock;
F1_q_a[23]_PORT_A_data_out = MEMORY(F1_q_a[23]_PORT_A_data_in_reg, , F1_q_a[23]_PORT_A_address_reg, F1_q_a[23]_PORT_B_address_reg, F1_q_a[23]_PORT_A_write_enable_reg, , , , F1_q_a[23]_clock_0, , , , , );
F1_q_a[23] = F1_q_a[23]_PORT_A_data_out[0];


--F1_q_a[24] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[24]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[24]_PORT_A_data_in = pWriteData[24];
F1_q_a[24]_PORT_A_data_in_reg = DFFE(F1_q_a[24]_PORT_A_data_in, F1_q_a[24]_clock_0, , , );
F1_q_a[24]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[24]_PORT_A_address_reg = DFFE(F1_q_a[24]_PORT_A_address, F1_q_a[24]_clock_0, , , );
F1_q_a[24]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[24]_PORT_B_address_reg = DFFE(F1_q_a[24]_PORT_B_address, F1_q_a[24]_clock_0, , , );
F1_q_a[24]_PORT_A_write_enable = pControl_in[1];
F1_q_a[24]_PORT_A_write_enable_reg = DFFE(F1_q_a[24]_PORT_A_write_enable, F1_q_a[24]_clock_0, , , );
F1_q_a[24]_clock_0 = !pClock;
F1_q_a[24]_PORT_A_data_out = MEMORY(F1_q_a[24]_PORT_A_data_in_reg, , F1_q_a[24]_PORT_A_address_reg, F1_q_a[24]_PORT_B_address_reg, F1_q_a[24]_PORT_A_write_enable_reg, , , , F1_q_a[24]_clock_0, , , , , );
F1_q_a[24] = F1_q_a[24]_PORT_A_data_out[0];


--F1_q_a[25] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[25]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[25]_PORT_A_data_in = pWriteData[25];
F1_q_a[25]_PORT_A_data_in_reg = DFFE(F1_q_a[25]_PORT_A_data_in, F1_q_a[25]_clock_0, , , );
F1_q_a[25]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[25]_PORT_A_address_reg = DFFE(F1_q_a[25]_PORT_A_address, F1_q_a[25]_clock_0, , , );
F1_q_a[25]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[25]_PORT_B_address_reg = DFFE(F1_q_a[25]_PORT_B_address, F1_q_a[25]_clock_0, , , );
F1_q_a[25]_PORT_A_write_enable = pControl_in[1];
F1_q_a[25]_PORT_A_write_enable_reg = DFFE(F1_q_a[25]_PORT_A_write_enable, F1_q_a[25]_clock_0, , , );
F1_q_a[25]_clock_0 = !pClock;
F1_q_a[25]_PORT_A_data_out = MEMORY(F1_q_a[25]_PORT_A_data_in_reg, , F1_q_a[25]_PORT_A_address_reg, F1_q_a[25]_PORT_B_address_reg, F1_q_a[25]_PORT_A_write_enable_reg, , , , F1_q_a[25]_clock_0, , , , , );
F1_q_a[25] = F1_q_a[25]_PORT_A_data_out[0];


--F1_q_a[26] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[26]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[26]_PORT_A_data_in = pWriteData[26];
F1_q_a[26]_PORT_A_data_in_reg = DFFE(F1_q_a[26]_PORT_A_data_in, F1_q_a[26]_clock_0, , , );
F1_q_a[26]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[26]_PORT_A_address_reg = DFFE(F1_q_a[26]_PORT_A_address, F1_q_a[26]_clock_0, , , );
F1_q_a[26]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[26]_PORT_B_address_reg = DFFE(F1_q_a[26]_PORT_B_address, F1_q_a[26]_clock_0, , , );
F1_q_a[26]_PORT_A_write_enable = pControl_in[1];
F1_q_a[26]_PORT_A_write_enable_reg = DFFE(F1_q_a[26]_PORT_A_write_enable, F1_q_a[26]_clock_0, , , );
F1_q_a[26]_clock_0 = !pClock;
F1_q_a[26]_PORT_A_data_out = MEMORY(F1_q_a[26]_PORT_A_data_in_reg, , F1_q_a[26]_PORT_A_address_reg, F1_q_a[26]_PORT_B_address_reg, F1_q_a[26]_PORT_A_write_enable_reg, , , , F1_q_a[26]_clock_0, , , , , );
F1_q_a[26] = F1_q_a[26]_PORT_A_data_out[0];


--F1_q_a[27] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[27]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[27]_PORT_A_data_in = pWriteData[27];
F1_q_a[27]_PORT_A_data_in_reg = DFFE(F1_q_a[27]_PORT_A_data_in, F1_q_a[27]_clock_0, , , );
F1_q_a[27]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[27]_PORT_A_address_reg = DFFE(F1_q_a[27]_PORT_A_address, F1_q_a[27]_clock_0, , , );
F1_q_a[27]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[27]_PORT_B_address_reg = DFFE(F1_q_a[27]_PORT_B_address, F1_q_a[27]_clock_0, , , );
F1_q_a[27]_PORT_A_write_enable = pControl_in[1];
F1_q_a[27]_PORT_A_write_enable_reg = DFFE(F1_q_a[27]_PORT_A_write_enable, F1_q_a[27]_clock_0, , , );
F1_q_a[27]_clock_0 = !pClock;
F1_q_a[27]_PORT_A_data_out = MEMORY(F1_q_a[27]_PORT_A_data_in_reg, , F1_q_a[27]_PORT_A_address_reg, F1_q_a[27]_PORT_B_address_reg, F1_q_a[27]_PORT_A_write_enable_reg, , , , F1_q_a[27]_clock_0, , , , , );
F1_q_a[27] = F1_q_a[27]_PORT_A_data_out[0];


--F1_q_a[28] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[28]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[28]_PORT_A_data_in = pWriteData[28];
F1_q_a[28]_PORT_A_data_in_reg = DFFE(F1_q_a[28]_PORT_A_data_in, F1_q_a[28]_clock_0, , , );
F1_q_a[28]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[28]_PORT_A_address_reg = DFFE(F1_q_a[28]_PORT_A_address, F1_q_a[28]_clock_0, , , );
F1_q_a[28]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[28]_PORT_B_address_reg = DFFE(F1_q_a[28]_PORT_B_address, F1_q_a[28]_clock_0, , , );
F1_q_a[28]_PORT_A_write_enable = pControl_in[1];
F1_q_a[28]_PORT_A_write_enable_reg = DFFE(F1_q_a[28]_PORT_A_write_enable, F1_q_a[28]_clock_0, , , );
F1_q_a[28]_clock_0 = !pClock;
F1_q_a[28]_PORT_A_data_out = MEMORY(F1_q_a[28]_PORT_A_data_in_reg, , F1_q_a[28]_PORT_A_address_reg, F1_q_a[28]_PORT_B_address_reg, F1_q_a[28]_PORT_A_write_enable_reg, , , , F1_q_a[28]_clock_0, , , , , );
F1_q_a[28] = F1_q_a[28]_PORT_A_data_out[0];


--F1_q_a[29] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[29]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[29]_PORT_A_data_in = pWriteData[29];
F1_q_a[29]_PORT_A_data_in_reg = DFFE(F1_q_a[29]_PORT_A_data_in, F1_q_a[29]_clock_0, , , );
F1_q_a[29]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[29]_PORT_A_address_reg = DFFE(F1_q_a[29]_PORT_A_address, F1_q_a[29]_clock_0, , , );
F1_q_a[29]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[29]_PORT_B_address_reg = DFFE(F1_q_a[29]_PORT_B_address, F1_q_a[29]_clock_0, , , );
F1_q_a[29]_PORT_A_write_enable = pControl_in[1];
F1_q_a[29]_PORT_A_write_enable_reg = DFFE(F1_q_a[29]_PORT_A_write_enable, F1_q_a[29]_clock_0, , , );
F1_q_a[29]_clock_0 = !pClock;
F1_q_a[29]_PORT_A_data_out = MEMORY(F1_q_a[29]_PORT_A_data_in_reg, , F1_q_a[29]_PORT_A_address_reg, F1_q_a[29]_PORT_B_address_reg, F1_q_a[29]_PORT_A_write_enable_reg, , , , F1_q_a[29]_clock_0, , , , , );
F1_q_a[29] = F1_q_a[29]_PORT_A_data_out[0];


--F1_q_a[30] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[30]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[30]_PORT_A_data_in = pWriteData[30];
F1_q_a[30]_PORT_A_data_in_reg = DFFE(F1_q_a[30]_PORT_A_data_in, F1_q_a[30]_clock_0, , , );
F1_q_a[30]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[30]_PORT_A_address_reg = DFFE(F1_q_a[30]_PORT_A_address, F1_q_a[30]_clock_0, , , );
F1_q_a[30]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[30]_PORT_B_address_reg = DFFE(F1_q_a[30]_PORT_B_address, F1_q_a[30]_clock_0, , , );
F1_q_a[30]_PORT_A_write_enable = pControl_in[1];
F1_q_a[30]_PORT_A_write_enable_reg = DFFE(F1_q_a[30]_PORT_A_write_enable, F1_q_a[30]_clock_0, , , );
F1_q_a[30]_clock_0 = !pClock;
F1_q_a[30]_PORT_A_data_out = MEMORY(F1_q_a[30]_PORT_A_data_in_reg, , F1_q_a[30]_PORT_A_address_reg, F1_q_a[30]_PORT_B_address_reg, F1_q_a[30]_PORT_A_write_enable_reg, , , , F1_q_a[30]_clock_0, , , , , );
F1_q_a[30] = F1_q_a[30]_PORT_A_data_out[0];


--F1_q_a[31] is eDmem:cDmem|lpm_ram_dq:data_memory|altram:sram|altsyncram:ram_block|altsyncram_a601:auto_generated|q_a[31]
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 32
--Port A Input: Registered, Port A Output: Un-registered
F1_q_a[31]_PORT_A_data_in = pWriteData[31];
F1_q_a[31]_PORT_A_data_in_reg = DFFE(F1_q_a[31]_PORT_A_data_in, F1_q_a[31]_clock_0, , , );
F1_q_a[31]_PORT_A_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[31]_PORT_A_address_reg = DFFE(F1_q_a[31]_PORT_A_address, F1_q_a[31]_clock_0, , , );
F1_q_a[31]_PORT_B_address = BUS(pAddress[2], pAddress[3], pAddress[4], pAddress[5], pAddress[6], pAddress[7], pAddress[8], pAddress[9]);
F1_q_a[31]_PORT_B_address_reg = DFFE(F1_q_a[31]_PORT_B_address, F1_q_a[31]_clock_0, , , );
F1_q_a[31]_PORT_A_write_enable = pControl_in[1];
F1_q_a[31]_PORT_A_write_enable_reg = DFFE(F1_q_a[31]_PORT_A_write_enable, F1_q_a[31]_clock_0, , , );
F1_q_a[31]_clock_0 = !pClock;
F1_q_a[31]_PORT_A_data_out = MEMORY(F1_q_a[31]_PORT_A_data_in_reg, , F1_q_a[31]_PORT_A_address_reg, F1_q_a[31]_PORT_B_address_reg, F1_q_a[31]_PORT_A_write_enable_reg, , , , F1_q_a[31]_clock_0, , , , , );
F1_q_a[31] = F1_q_a[31]_PORT_A_data_out[0];


--pControl_in[2] is pControl_in[2]
--operation mode is input

pControl_in[2] = INPUT();


--pControl_in[3] is pControl_in[3]
--operation mode is input

pControl_in[3] = INPUT();


--pAddress[0] is pAddress[0]
--operation mode is input

pAddress[0] = INPUT();


--pAddress[1] is pAddress[1]
--operation mode is input

pAddress[1] = INPUT();


--pAddress[2] is pAddress[2]
--operation mode is input

pAddress[2] = INPUT();


--pAddress[3] is pAddress[3]
--operation mode is input

pAddress[3] = INPUT();


--pAddress[4] is pAddress[4]
--operation mode is input

pAddress[4] = INPUT();


--pAddress[5] is pAddress[5]
--operation mode is input

pAddress[5] = INPUT();


--pAddress[6] is pAddress[6]
--operation mode is input

pAddress[6] = INPUT();


--pAddress[7] is pAddress[7]
--operation mode is input

pAddress[7] = INPUT();


--pAddress[8] is pAddress[8]
--operation mode is input

pAddress[8] = INPUT();


--pAddress[9] is pAddress[9]
--operation mode is input

pAddress[9] = INPUT();


--pAddress[10] is pAddress[10]
--operation mode is input

pAddress[10] = INPUT();


--pAddress[11] is pAddress[11]
--operation mode is input

pAddress[11] = INPUT();


--pAddress[12] is pAddress[12]
--operation mode is input

pAddress[12] = INPUT();


--pAddress[13] is pAddress[13]
--operation mode is input

pAddress[13] = INPUT();


--pAddress[14] is pAddress[14]
--operation mode is input

pAddress[14] = INPUT();


--pAddress[15] is pAddress[15]
--operation mode is input

pAddress[15] = INPUT();


--pAddress[16] is pAddress[16]
--operation mode is input

pAddress[16] = INPUT();


--pAddress[17] is pAddress[17]
--operation mode is input

pAddress[17] = INPUT();


--pAddress[18] is pAddress[18]
--operation mode is input

pAddress[18] = INPUT();


--pAddress[19] is pAddress[19]
--operation mode is input

pAddress[19] = INPUT();


--pAddress[20] is pAddress[20]
--operation mode is input

pAddress[20] = INPUT();


--pAddress[21] is pAddress[21]
--operation mode is input

pAddress[21] = INPUT();


--pAddress[22] is pAddress[22]
--operation mode is input

pAddress[22] = INPUT();


--pAddress[23] is pAddress[23]
--operation mode is input

pAddress[23] = INPUT();


--pAddress[24] is pAddress[24]
--operation mode is input

pAddress[24] = INPUT();


--pAddress[25] is pAddress[25]
--operation mode is input

pAddress[25] = INPUT();


--pAddress[26] is pAddress[26]
--operation mode is input

pAddress[26] = INPUT();


--pAddress[27] is pAddress[27]
--operation mode is input

pAddress[27] = INPUT();


--pAddress[28] is pAddress[28]
--operation mode is input

pAddress[28] = INPUT();


--pAddress[29] is pAddress[29]
--operation mode is input

pAddress[29] = INPUT();


--pAddress[30] is pAddress[30]
--operation mode is input

pAddress[30] = INPUT();


--pAddress[31] is pAddress[31]
--operation mode is input

pAddress[31] = INPUT();


--pWriteReg_in[0] is pWriteReg_in[0]
--operation mode is input

pWriteReg_in[0] = INPUT();


--pWriteReg_in[1] is pWriteReg_in[1]
--operation mode is input

pWriteReg_in[1] = INPUT();


--pWriteReg_in[2] is pWriteReg_in[2]
--operation mode is input

pWriteReg_in[2] = INPUT();


--pWriteReg_in[3] is pWriteReg_in[3]
--operation mode is input

pWriteReg_in[3] = INPUT();


--pWriteReg_in[4] is pWriteReg_in[4]
--operation mode is input

pWriteReg_in[4] = INPUT();


--pControl_in[0] is pControl_in[0]
--operation mode is input

pControl_in[0] = INPUT();


--pControl_in[1] is pControl_in[1]
--operation mode is input

pControl_in[1] = INPUT();


--pClock is pClock
--operation mode is input

pClock = INPUT();


--pWriteData[0] is pWriteData[0]
--operation mode is input

pWriteData[0] = INPUT();


--pWriteData[1] is pWriteData[1]
--operation mode is input

pWriteData[1] = INPUT();


--pWriteData[2] is pWriteData[2]
--operation mode is input

pWriteData[2] = INPUT();


--pWriteData[3] is pWriteData[3]
--operation mode is input

pWriteData[3] = INPUT();


--pWriteData[4] is pWriteData[4]
--operation mode is input

pWriteData[4] = INPUT();


--pWriteData[5] is pWriteData[5]
--operation mode is input

pWriteData[5] = INPUT();


--pWriteData[6] is pWriteData[6]
--operation mode is input

pWriteData[6] = INPUT();


--pWriteData[7] is pWriteData[7]
--operation mode is input

pWriteData[7] = INPUT();


--pWriteData[8] is pWriteData[8]
--operation mode is input

pWriteData[8] = INPUT();


--pWriteData[9] is pWriteData[9]
--operation mode is input

pWriteData[9] = INPUT();


--pWriteData[10] is pWriteData[10]
--operation mode is input

pWriteData[10] = INPUT();


--pWriteData[11] is pWriteData[11]
--operation mode is input

pWriteData[11] = INPUT();


--pWriteData[12] is pWriteData[12]
--operation mode is input

pWriteData[12] = INPUT();


--pWriteData[13] is pWriteData[13]
--operation mode is input

pWriteData[13] = INPUT();


--pWriteData[14] is pWriteData[14]
--operation mode is input

pWriteData[14] = INPUT();


--pWriteData[15] is pWriteData[15]
--operation mode is input

pWriteData[15] = INPUT();


--pWriteData[16] is pWriteData[16]
--operation mode is input

pWriteData[16] = INPUT();


--pWriteData[17] is pWriteData[17]
--operation mode is input

pWriteData[17] = INPUT();


--pWriteData[18] is pWriteData[18]
--operation mode is input

pWriteData[18] = INPUT();


--pWriteData[19] is pWriteData[19]
--operation mode is input

pWriteData[19] = INPUT();


--pWriteData[20] is pWriteData[20]
--operation mode is input

pWriteData[20] = INPUT();


--pWriteData[21] is pWriteData[21]
--operation mode is input

pWriteData[21] = INPUT();


--pWriteData[22] is pWriteData[22]
--operation mode is input

pWriteData[22] = INPUT();


--pWriteData[23] is pWriteData[23]
--operation mode is input

pWriteData[23] = INPUT();


--pWriteData[24] is pWriteData[24]
--operation mode is input

pWriteData[24] = INPUT();


--pWriteData[25] is pWriteData[25]
--operation mode is input

pWriteData[25] = INPUT();


--pWriteData[26] is pWriteData[26]
--operation mode is input

pWriteData[26] = INPUT();


--pWriteData[27] is pWriteData[27]
--operation mode is input

pWriteData[27] = INPUT();


--pWriteData[28] is pWriteData[28]
--operation mode is input

pWriteData[28] = INPUT();


--pWriteData[29] is pWriteData[29]
--operation mode is input

pWriteData[29] = INPUT();


--pWriteData[30] is pWriteData[30]
--operation mode is input

pWriteData[30] = INPUT();


--pWriteData[31] is pWriteData[31]
--operation mode is input

pWriteData[31] = INPUT();


--pControl_out[0] is pControl_out[0]
--operation mode is output

pControl_out[0] = OUTPUT(pControl_in[2]);


--pControl_out[1] is pControl_out[1]
--operation mode is output

pControl_out[1] = OUTPUT(pControl_in[3]);


--pReadData[0] is pReadData[0]
--operation mode is output

pReadData[0]_tri_out = TRI(F1_q_a[0], pControl_in[0]);
pReadData[0] = OUTPUT(pReadData[0]_tri_out);


--pReadData[1] is pReadData[1]
--operation mode is output

pReadData[1]_tri_out = TRI(F1_q_a[1], pControl_in[0]);
pReadData[1] = OUTPUT(pReadData[1]_tri_out);


--pReadData[2] is pReadData[2]
--operation mode is output

pReadData[2]_tri_out = TRI(F1_q_a[2], pControl_in[0]);
pReadData[2] = OUTPUT(pReadData[2]_tri_out);


--pReadData[3] is pReadData[3]
--operation mode is output

pReadData[3]_tri_out = TRI(F1_q_a[3], pControl_in[0]);
pReadData[3] = OUTPUT(pReadData[3]_tri_out);


--pReadData[4] is pReadData[4]
--operation mode is output

pReadData[4]_tri_out = TRI(F1_q_a[4], pControl_in[0]);
pReadData[4] = OUTPUT(pReadData[4]_tri_out);


--pReadData[5] is pReadData[5]
--operation mode is output

pReadData[5]_tri_out = TRI(F1_q_a[5], pControl_in[0]);
pReadData[5] = OUTPUT(pReadData[5]_tri_out);


--pReadData[6] is pReadData[6]
--operation mode is output

pReadData[6]_tri_out = TRI(F1_q_a[6], pControl_in[0]);
pReadData[6] = OUTPUT(pReadData[6]_tri_out);


--pReadData[7] is pReadData[7]
--operation mode is output

pReadData[7]_tri_out = TRI(F1_q_a[7], pControl_in[0]);
pReadData[7] = OUTPUT(pReadData[7]_tri_out);


--pReadData[8] is pReadData[8]
--operation mode is output

pReadData[8]_tri_out = TRI(F1_q_a[8], pControl_in[0]);
pReadData[8] = OUTPUT(pReadData[8]_tri_out);


--pReadData[9] is pReadData[9]
--operation mode is output

pReadData[9]_tri_out = TRI(F1_q_a[9], pControl_in[0]);
pReadData[9] = OUTPUT(pReadData[9]_tri_out);


--pReadData[10] is pReadData[10]
--operation mode is output

pReadData[10]_tri_out = TRI(F1_q_a[10], pControl_in[0]);
pReadData[10] = OUTPUT(pReadData[10]_tri_out);


--pReadData[11] is pReadData[11]
--operation mode is output

pReadData[11]_tri_out = TRI(F1_q_a[11], pControl_in[0]);
pReadData[11] = OUTPUT(pReadData[11]_tri_out);


--pReadData[12] is pReadData[12]
--operation mode is output

pReadData[12]_tri_out = TRI(F1_q_a[12], pControl_in[0]);
pReadData[12] = OUTPUT(pReadData[12]_tri_out);


--pReadData[13] is pReadData[13]
--operation mode is output

pReadData[13]_tri_out = TRI(F1_q_a[13], pControl_in[0]);
pReadData[13] = OUTPUT(pReadData[13]_tri_out);


--pReadData[14] is pReadData[14]
--operation mode is output

pReadData[14]_tri_out = TRI(F1_q_a[14], pControl_in[0]);
pReadData[14] = OUTPUT(pReadData[14]_tri_out);


--pReadData[15] is pReadData[15]
--operation mode is output

pReadData[15]_tri_out = TRI(F1_q_a[15], pControl_in[0]);
pReadData[15] = OUTPUT(pReadData[15]_tri_out);


--pReadData[16] is pReadData[16]
--operation mode is output

pReadData[16]_tri_out = TRI(F1_q_a[16], pControl_in[0]);
pReadData[16] = OUTPUT(pReadData[16]_tri_out);


--pReadData[17] is pReadData[17]
--operation mode is output

pReadData[17]_tri_out = TRI(F1_q_a[17], pControl_in[0]);
pReadData[17] = OUTPUT(pReadData[17]_tri_out);


--pReadData[18] is pReadData[18]
--operation mode is output

pReadData[18]_tri_out = TRI(F1_q_a[18], pControl_in[0]);
pReadData[18] = OUTPUT(pReadData[18]_tri_out);


--pReadData[19] is pReadData[19]
--operation mode is output

pReadData[19]_tri_out = TRI(F1_q_a[19], pControl_in[0]);
pReadData[19] = OUTPUT(pReadData[19]_tri_out);


--pReadData[20] is pReadData[20]
--operation mode is output

pReadData[20]_tri_out = TRI(F1_q_a[20], pControl_in[0]);
pReadData[20] = OUTPUT(pReadData[20]_tri_out);


--pReadData[21] is pReadData[21]
--operation mode is output

pReadData[21]_tri_out = TRI(F1_q_a[21], pControl_in[0]);
pReadData[21] = OUTPUT(pReadData[21]_tri_out);


--pReadData[22] is pReadData[22]
--operation mode is output

pReadData[22]_tri_out = TRI(F1_q_a[22], pControl_in[0]);
pReadData[22] = OUTPUT(pReadData[22]_tri_out);


--pReadData[23] is pReadData[23]
--operation mode is output

pReadData[23]_tri_out = TRI(F1_q_a[23], pControl_in[0]);
pReadData[23] = OUTPUT(pReadData[23]_tri_out);


--pReadData[24] is pReadData[24]
--operation mode is output

pReadData[24]_tri_out = TRI(F1_q_a[24], pControl_in[0]);
pReadData[24] = OUTPUT(pReadData[24]_tri_out);


--pReadData[25] is pReadData[25]
--operation mode is output

pReadData[25]_tri_out = TRI(F1_q_a[25], pControl_in[0]);
pReadData[25] = OUTPUT(pReadData[25]_tri_out);


--pReadData[26] is pReadData[26]
--operation mode is output

pReadData[26]_tri_out = TRI(F1_q_a[26], pControl_in[0]);
pReadData[26] = OUTPUT(pReadData[26]_tri_out);


--pReadData[27] is pReadData[27]
--operation mode is output

pReadData[27]_tri_out = TRI(F1_q_a[27], pControl_in[0]);
pReadData[27] = OUTPUT(pReadData[27]_tri_out);


--pReadData[28] is pReadData[28]
--operation mode is output

pReadData[28]_tri_out = TRI(F1_q_a[28], pControl_in[0]);
pReadData[28] = OUTPUT(pReadData[28]_tri_out);


--pReadData[29] is pReadData[29]
--operation mode is output

pReadData[29]_tri_out = TRI(F1_q_a[29], pControl_in[0]);
pReadData[29] = OUTPUT(pReadData[29]_tri_out);


--pReadData[30] is pReadData[30]
--operation mode is output

pReadData[30]_tri_out = TRI(F1_q_a[30], pControl_in[0]);
pReadData[30] = OUTPUT(pReadData[30]_tri_out);


--pReadData[31] is pReadData[31]
--operation mode is output

pReadData[31]_tri_out = TRI(F1_q_a[31], pControl_in[0]);
pReadData[31] = OUTPUT(pReadData[31]_tri_out);


--pResult[0] is pResult[0]
--operation mode is output

pResult[0] = OUTPUT(pAddress[0]);


--pResult[1] is pResult[1]
--operation mode is output

pResult[1] = OUTPUT(pAddress[1]);


--pResult[2] is pResult[2]
--operation mode is output

pResult[2] = OUTPUT(pAddress[2]);


--pResult[3] is pResult[3]
--operation mode is output

pResult[3] = OUTPUT(pAddress[3]);


--pResult[4] is pResult[4]
--operation mode is output

pResult[4] = OUTPUT(pAddress[4]);


--pResult[5] is pResult[5]
--operation mode is output

pResult[5] = OUTPUT(pAddress[5]);


--pResult[6] is pResult[6]
--operation mode is output

pResult[6] = OUTPUT(pAddress[6]);


--pResult[7] is pResult[7]
--operation mode is output

pResult[7] = OUTPUT(pAddress[7]);


--pResult[8] is pResult[8]
--operation mode is output

pResult[8] = OUTPUT(pAddress[8]);


--pResult[9] is pResult[9]
--operation mode is output

pResult[9] = OUTPUT(pAddress[9]);


--pResult[10] is pResult[10]
--operation mode is output

pResult[10] = OUTPUT(pAddress[10]);


--pResult[11] is pResult[11]
--operation mode is output

pResult[11] = OUTPUT(pAddress[11]);


--pResult[12] is pResult[12]
--operation mode is output

pResult[12] = OUTPUT(pAddress[12]);


--pResult[13] is pResult[13]
--operation mode is output

pResult[13] = OUTPUT(pAddress[13]);


--pResult[14] is pResult[14]
--operation mode is output

pResult[14] = OUTPUT(pAddress[14]);


--pResult[15] is pResult[15]
--operation mode is output

pResult[15] = OUTPUT(pAddress[15]);


--pResult[16] is pResult[16]
--operation mode is output

pResult[16] = OUTPUT(pAddress[16]);


--pResult[17] is pResult[17]
--operation mode is output

pResult[17] = OUTPUT(pAddress[17]);


--pResult[18] is pResult[18]
--operation mode is output

pResult[18] = OUTPUT(pAddress[18]);


--pResult[19] is pResult[19]
--operation mode is output

pResult[19] = OUTPUT(pAddress[19]);


--pResult[20] is pResult[20]
--operation mode is output

pResult[20] = OUTPUT(pAddress[20]);


--pResult[21] is pResult[21]
--operation mode is output

pResult[21] = OUTPUT(pAddress[21]);


--pResult[22] is pResult[22]
--operation mode is output

pResult[22] = OUTPUT(pAddress[22]);


--pResult[23] is pResult[23]
--operation mode is output

pResult[23] = OUTPUT(pAddress[23]);


--pResult[24] is pResult[24]
--operation mode is output

pResult[24] = OUTPUT(pAddress[24]);


--pResult[25] is pResult[25]
--operation mode is output

pResult[25] = OUTPUT(pAddress[25]);


--pResult[26] is pResult[26]
--operation mode is output

pResult[26] = OUTPUT(pAddress[26]);


--pResult[27] is pResult[27]
--operation mode is output

pResult[27] = OUTPUT(pAddress[27]);


--pResult[28] is pResult[28]
--operation mode is output

pResult[28] = OUTPUT(pAddress[28]);


--pResult[29] is pResult[29]
--operation mode is output

pResult[29] = OUTPUT(pAddress[29]);


--pResult[30] is pResult[30]
--operation mode is output

pResult[30] = OUTPUT(pAddress[30]);


--pResult[31] is pResult[31]
--operation mode is output

pResult[31] = OUTPUT(pAddress[31]);


--pWriteReg_out[0] is pWriteReg_out[0]
--operation mode is output

pWriteReg_out[0] = OUTPUT(pWriteReg_in[0]);


--pWriteReg_out[1] is pWriteReg_out[1]
--operation mode is output

pWriteReg_out[1] = OUTPUT(pWriteReg_in[1]);


--pWriteReg_out[2] is pWriteReg_out[2]
--operation mode is output

pWriteReg_out[2] = OUTPUT(pWriteReg_in[2]);


--pWriteReg_out[3] is pWriteReg_out[3]
--operation mode is output

pWriteReg_out[3] = OUTPUT(pWriteReg_in[3]);


--pWriteReg_out[4] is pWriteReg_out[4]
--operation mode is output

pWriteReg_out[4] = OUTPUT(pWriteReg_in[4]);


