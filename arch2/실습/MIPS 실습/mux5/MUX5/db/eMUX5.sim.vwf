/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2005 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic       
functions, and any output files any of the foregoing           
(including device programming or simulation files), and any    
associated documentation or information are expressly subject  
to the terms and conditions of the Altera Program License      
Subscription Agreement, Altera MegaCore Function License       
Agreement, or other applicable license agreement, including,   
without limitation, that your use is for the sole purpose of   
programming logic devices manufactured by Altera and sold by   
Altera or its authorized distributors.  Please refer to the    
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("pIn0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pIn0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn0";
}

SIGNAL("pIn0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn0";
}

SIGNAL("pIn0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn0";
}

SIGNAL("pIn0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn0";
}

SIGNAL("pIn0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn0";
}

SIGNAL("pIn1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pIn1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn1";
}

SIGNAL("pIn1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn1";
}

SIGNAL("pIn1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn1";
}

SIGNAL("pIn1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn1";
}

SIGNAL("pIn1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pIn1";
}

SIGNAL("pSelect")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pOut";
}

SIGNAL("pOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pOut";
}

SIGNAL("pOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pOut";
}

SIGNAL("pOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pOut";
}

SIGNAL("pOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pOut";
}

TRANSITION_LIST("pIn0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("pIn0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 200.0;
	}
}

TRANSITION_LIST("pIn0[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 200.0;
	}
}

TRANSITION_LIST("pIn0[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
	}
}

TRANSITION_LIST("pIn0[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("pIn1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("pIn1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 200.0;
	}
}

TRANSITION_LIST("pIn1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 600.0;
	}
}

TRANSITION_LIST("pIn1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
	}
}

TRANSITION_LIST("pIn1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("pSelect")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
	}
}

TRANSITION_LIST("pOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 508.094;
		LEVEL 1 FOR 491.906;
	}
}

TRANSITION_LIST("pOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 508.088;
		LEVEL 1 FOR 300.566;
		LEVEL 0 FOR 191.346;
	}
}

TRANSITION_LIST("pOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 408.503;
		LEVEL 1 FOR 99.59;
		LEVEL 0 FOR 491.907;
	}
}

TRANSITION_LIST("pOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 208.563;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 199.893;
		LEVEL 1 FOR 391.544;
	}
}

TRANSITION_LIST("pOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 108.244;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 91.256;
	}
}

DISPLAY_LINE
{
	CHANNEL = "pIn0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "pIn0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pIn0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pIn0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pIn0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pIn0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pIn1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "pIn1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "pIn1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "pIn1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "pIn1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "pIn1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "pSelect";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "pOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "pOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "pOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "pOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "pOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

TIME_BAR
{
	TIME = 16450;
	MASTER = TRUE;
}
;
