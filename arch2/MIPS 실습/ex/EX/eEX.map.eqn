-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--B1L1 is eALU:cALU|add~15918
--operation mode is arithmetic

B1L1_carry_eqn = B1L78;
B1L1 = B1L921 $ B1L131 $ B1L1_carry_eqn;

--B1L2 is eALU:cALU|add~15920
--operation mode is arithmetic

B1L2 = CARRY(B1L921 & !B1L131 & !B1L78 # !B1L921 & (!B1L78 # !B1L131));


--D1L51 is eMux32:cMUX32|pOut[14]~480
--operation mode is normal

D1L51 = pControl_in[2] & pImm[14] # !pControl_in[2] & (pData2[14]);


--B1L132 is eALU:cALU|reduce_nor~850
--operation mode is normal

B1L132 = pImm[5] & (!pImm[4]);


--B1L232 is eALU:cALU|reduce_nor~851
--operation mode is normal

B1L232 = B1L132 & pImm[2] & !pImm[1] & !pImm[3];


--B1L3 is eALU:cALU|add~15923
--operation mode is normal

B1L3 = pData1[14] & (D1L51 # B1L232 & pImm[0]) # !pData1[14] & D1L51 & B1L232 & pImm[0];


--B1L4 is eALU:cALU|add~15924
--operation mode is normal

B1L4 = pControl_in[3] # !B1L232 # !pControl_in[1];


--B1L5 is eALU:cALU|add~15925
--operation mode is normal

B1L5 = B1L4 & B1L1 # !B1L4 & (B1L3);


--B1L6 is eALU:cALU|add~15926
--operation mode is arithmetic

B1L6_carry_eqn = B1L2;
B1L6 = B1L231 $ B1L331 $ !B1L6_carry_eqn;

--B1L7 is eALU:cALU|add~15928
--operation mode is arithmetic

B1L7 = CARRY(B1L231 & (B1L331 # !B1L2) # !B1L231 & B1L331 & !B1L2);


--D1L61 is eMux32:cMUX32|pOut[15]~481
--operation mode is normal

D1L61 = pControl_in[2] & pImm[15] # !pControl_in[2] & (pData2[15]);


--B1L8 is eALU:cALU|add~15931
--operation mode is normal

B1L8 = pData1[15] & (D1L61 # B1L232 & pImm[0]) # !pData1[15] & D1L61 & B1L232 & pImm[0];


--B1L9 is eALU:cALU|add~15932
--operation mode is normal

B1L9 = B1L4 & B1L6 # !B1L4 & (B1L8);


--B1L01 is eALU:cALU|add~15933
--operation mode is arithmetic

B1L01_carry_eqn = B1L111;
B1L01 = B1L431 $ B1L531 $ B1L01_carry_eqn;

--B1L11 is eALU:cALU|add~15935
--operation mode is arithmetic

B1L11 = CARRY(B1L431 & !B1L531 & !B1L111 # !B1L431 & (!B1L111 # !B1L531));


--D1L13 is eMux32:cMUX32|pOut[30]~482
--operation mode is normal

D1L13 = pControl_in[2] & pImm[30] # !pControl_in[2] & (pData2[30]);


--B1L21 is eALU:cALU|add~15938
--operation mode is normal

B1L21 = pData1[30] & (D1L13 # B1L232 & pImm[0]) # !pData1[30] & D1L13 & B1L232 & pImm[0];


--B1L31 is eALU:cALU|add~15939
--operation mode is normal

B1L31 = B1L4 & B1L01 # !B1L4 & (B1L21);


--B1L41 is eALU:cALU|add~15940
--operation mode is arithmetic

B1L41_carry_eqn = B1L93;
B1L41 = B1L631 $ B1L731 $ B1L41_carry_eqn;

--B1L51 is eALU:cALU|add~15942
--operation mode is arithmetic

B1L51 = CARRY(B1L631 & !B1L731 & !B1L93 # !B1L631 & (!B1L93 # !B1L731));


--D1L11 is eMux32:cMUX32|pOut[10]~483
--operation mode is normal

D1L11 = pControl_in[2] & pImm[10] # !pControl_in[2] & (pData2[10]);


--B1L61 is eALU:cALU|add~15945
--operation mode is normal

B1L61 = pData1[10] & (D1L11 # B1L232 & pImm[0]) # !pData1[10] & D1L11 & B1L232 & pImm[0];


--B1L71 is eALU:cALU|add~15946
--operation mode is normal

B1L71 = B1L4 & B1L41 # !B1L4 & (B1L61);


--B1L332 is eALU:cALU|reduce_nor~852
--operation mode is normal

B1L332 = B1L5 # B1L9 # B1L31 # B1L71;


--B1L81 is eALU:cALU|add~15947
--operation mode is arithmetic

B1L81_carry_eqn = B1L51;
B1L81 = B1L831 $ B1L931 $ !B1L81_carry_eqn;

--B1L91 is eALU:cALU|add~15949
--operation mode is arithmetic

B1L91 = CARRY(B1L831 & (B1L931 # !B1L51) # !B1L831 & B1L931 & !B1L51);


--D1L21 is eMux32:cMUX32|pOut[11]~484
--operation mode is normal

D1L21 = pControl_in[2] & pImm[11] # !pControl_in[2] & (pData2[11]);


--B1L02 is eALU:cALU|add~15952
--operation mode is normal

B1L02 = pData1[11] & (D1L21 # B1L232 & pImm[0]) # !pData1[11] & D1L21 & B1L232 & pImm[0];


--B1L12 is eALU:cALU|add~15953
--operation mode is normal

B1L12 = B1L4 & B1L81 # !B1L4 & (B1L02);


--B1L22 is eALU:cALU|add~15954
--operation mode is arithmetic

B1L22_carry_eqn = B1L72;
B1L22 = B1L041 $ B1L141 $ B1L22_carry_eqn;

--B1L32 is eALU:cALU|add~15956
--operation mode is arithmetic

B1L32 = CARRY(B1L041 & !B1L141 & !B1L72 # !B1L041 & (!B1L72 # !B1L141));


--D1L32 is eMux32:cMUX32|pOut[22]~485
--operation mode is normal

D1L32 = pControl_in[2] & pImm[22] # !pControl_in[2] & (pData2[22]);


--B1L42 is eALU:cALU|add~15959
--operation mode is normal

B1L42 = pData1[22] & (D1L32 # B1L232 & pImm[0]) # !pData1[22] & D1L32 & B1L232 & pImm[0];


--B1L52 is eALU:cALU|add~15960
--operation mode is normal

B1L52 = B1L4 & B1L22 # !B1L4 & (B1L42);


--B1L62 is eALU:cALU|add~15961
--operation mode is arithmetic

B1L62_carry_eqn = B1L55;
B1L62 = B1L241 $ B1L341 $ !B1L62_carry_eqn;

--B1L72 is eALU:cALU|add~15963
--operation mode is arithmetic

B1L72 = CARRY(B1L241 & (B1L341 # !B1L55) # !B1L241 & B1L341 & !B1L55);


--D1L22 is eMux32:cMUX32|pOut[21]~486
--operation mode is normal

D1L22 = pControl_in[2] & pImm[21] # !pControl_in[2] & (pData2[21]);


--B1L82 is eALU:cALU|add~15966
--operation mode is normal

B1L82 = pData1[21] & (D1L22 # B1L232 & pImm[0]) # !pData1[21] & D1L22 & B1L232 & pImm[0];


--B1L92 is eALU:cALU|add~15967
--operation mode is normal

B1L92 = B1L4 & B1L62 # !B1L4 & (B1L82);


--B1L03 is eALU:cALU|add~15968
--operation mode is arithmetic

B1L03_carry_eqn = B1L76;
B1L03 = B1L441 $ B1L541 $ !B1L03_carry_eqn;

--B1L13 is eALU:cALU|add~15970
--operation mode is arithmetic

B1L13 = CARRY(B1L441 & (B1L541 # !B1L76) # !B1L441 & B1L541 & !B1L76);


--D1L82 is eMux32:cMUX32|pOut[27]~487
--operation mode is normal

D1L82 = pControl_in[2] & pImm[27] # !pControl_in[2] & (pData2[27]);


--B1L23 is eALU:cALU|add~15973
--operation mode is normal

B1L23 = pData1[27] & (D1L82 # B1L232 & pImm[0]) # !pData1[27] & D1L82 & B1L232 & pImm[0];


--B1L33 is eALU:cALU|add~15974
--operation mode is normal

B1L33 = B1L4 & B1L03 # !B1L4 & (B1L23);


--B1L432 is eALU:cALU|reduce_nor~853
--operation mode is normal

B1L432 = B1L12 # B1L52 # B1L92 # B1L33;


--B1L43 is eALU:cALU|add~15975
--operation mode is arithmetic

B1L43_carry_eqn = B1L15;
B1L43 = B1L641 $ B1L741 $ B1L43_carry_eqn;

--B1L53 is eALU:cALU|add~15977
--operation mode is arithmetic

B1L53 = CARRY(B1L641 & !B1L741 & !B1L15 # !B1L641 & (!B1L15 # !B1L741));


--D1L9 is eMux32:cMUX32|pOut[8]~488
--operation mode is normal

D1L9 = pControl_in[2] & pImm[8] # !pControl_in[2] & (pData2[8]);


--B1L63 is eALU:cALU|add~15980
--operation mode is normal

B1L63 = pData1[8] & (D1L9 # B1L232 & pImm[0]) # !pData1[8] & D1L9 & B1L232 & pImm[0];


--B1L73 is eALU:cALU|add~15981
--operation mode is normal

B1L73 = B1L4 & B1L43 # !B1L4 & (B1L63);


--B1L83 is eALU:cALU|add~15982
--operation mode is arithmetic

B1L83_carry_eqn = B1L53;
B1L83 = B1L841 $ B1L941 $ !B1L83_carry_eqn;

--B1L93 is eALU:cALU|add~15984
--operation mode is arithmetic

B1L93 = CARRY(B1L841 & (B1L941 # !B1L53) # !B1L841 & B1L941 & !B1L53);


--D1L01 is eMux32:cMUX32|pOut[9]~489
--operation mode is normal

D1L01 = pControl_in[2] & pImm[9] # !pControl_in[2] & (pData2[9]);


--B1L04 is eALU:cALU|add~15987
--operation mode is normal

B1L04 = pData1[9] & (D1L01 # B1L232 & pImm[0]) # !pData1[9] & D1L01 & B1L232 & pImm[0];


--B1L14 is eALU:cALU|add~15988
--operation mode is normal

B1L14 = B1L4 & B1L83 # !B1L4 & (B1L04);


--B1L24 is eALU:cALU|add~15989
--operation mode is arithmetic

B1L24_carry_eqn = B1L621;
B1L24 = B1L051 $ B1L151 $ B1L24_carry_eqn;

--B1L34 is eALU:cALU|add~15991
--operation mode is arithmetic

B1L34 = CARRY(B1L051 & !B1L151 & !B1L621 # !B1L051 & (!B1L621 # !B1L151));


--D1L91 is eMux32:cMUX32|pOut[18]~490
--operation mode is normal

D1L91 = pControl_in[2] & pImm[18] # !pControl_in[2] & (pData2[18]);


--B1L44 is eALU:cALU|add~15994
--operation mode is normal

B1L44 = pData1[18] & (D1L91 # B1L232 & pImm[0]) # !pData1[18] & D1L91 & B1L232 & pImm[0];


--B1L54 is eALU:cALU|add~15995
--operation mode is normal

B1L54 = B1L4 & B1L24 # !B1L4 & (B1L44);


--B1L64 is eALU:cALU|add~15996
--operation mode is arithmetic

B1L64_carry_eqn = B1L97;
B1L64 = B1L251 $ B1L351 $ B1L64_carry_eqn;

--B1L74 is eALU:cALU|add~15998
--operation mode is arithmetic

B1L74 = CARRY(B1L251 & !B1L351 & !B1L97 # !B1L251 & (!B1L97 # !B1L351));


--D1L5 is eMux32:cMUX32|pOut[4]~491
--operation mode is normal

D1L5 = pControl_in[2] & pImm[4] # !pControl_in[2] & (pData2[4]);


--B1L84 is eALU:cALU|add~16001
--operation mode is normal

B1L84 = pData1[4] & (D1L5 # B1L232 & pImm[0]) # !pData1[4] & D1L5 & B1L232 & pImm[0];


--B1L94 is eALU:cALU|add~16002
--operation mode is normal

B1L94 = B1L4 & B1L64 # !B1L4 & (B1L84);


--B1L532 is eALU:cALU|reduce_nor~854
--operation mode is normal

B1L532 = B1L73 # B1L14 # B1L54 # B1L94;


--B1L05 is eALU:cALU|add~16003
--operation mode is arithmetic

B1L05_carry_eqn = B1L17;
B1L05 = B1L451 $ B1L551 $ !B1L05_carry_eqn;

--B1L15 is eALU:cALU|add~16005
--operation mode is arithmetic

B1L15 = CARRY(B1L451 & (B1L551 # !B1L17) # !B1L451 & B1L551 & !B1L17);


--D1L8 is eMux32:cMUX32|pOut[7]~492
--operation mode is normal

D1L8 = pControl_in[2] & pImm[7] # !pControl_in[2] & (pData2[7]);


--B1L25 is eALU:cALU|add~16008
--operation mode is normal

B1L25 = pData1[7] & (D1L8 # B1L232 & pImm[0]) # !pData1[7] & D1L8 & B1L232 & pImm[0];


--B1L35 is eALU:cALU|add~16009
--operation mode is normal

B1L35 = B1L4 & B1L05 # !B1L4 & (B1L25);


--B1L45 is eALU:cALU|add~16010
--operation mode is arithmetic

B1L45_carry_eqn = B1L36;
B1L45 = B1L651 $ B1L751 $ B1L45_carry_eqn;

--B1L55 is eALU:cALU|add~16012
--operation mode is arithmetic

B1L55 = CARRY(B1L651 & !B1L751 & !B1L36 # !B1L651 & (!B1L36 # !B1L751));


--D1L12 is eMux32:cMUX32|pOut[20]~493
--operation mode is normal

D1L12 = pControl_in[2] & pImm[20] # !pControl_in[2] & (pData2[20]);


--B1L65 is eALU:cALU|add~16015
--operation mode is normal

B1L65 = pData1[20] & (D1L12 # B1L232 & pImm[0]) # !pData1[20] & D1L12 & B1L232 & pImm[0];


--B1L75 is eALU:cALU|add~16016
--operation mode is normal

B1L75 = B1L4 & B1L45 # !B1L4 & (B1L65);


--B1L85 is eALU:cALU|add~16017
--operation mode is arithmetic

B1L85_carry_eqn = B1L74;
B1L85 = B1L851 $ B1L951 $ !B1L85_carry_eqn;

--B1L95 is eALU:cALU|add~16019
--operation mode is arithmetic

B1L95 = CARRY(B1L851 & (B1L951 # !B1L74) # !B1L851 & B1L951 & !B1L74);


--D1L6 is eMux32:cMUX32|pOut[5]~494
--operation mode is normal

D1L6 = pControl_in[2] & pImm[5] # !pControl_in[2] & (pData2[5]);


--B1L06 is eALU:cALU|add~16022
--operation mode is normal

B1L06 = pData1[5] & (D1L6 # B1L232 & pImm[0]) # !pData1[5] & D1L6 & B1L232 & pImm[0];


--B1L16 is eALU:cALU|add~16023
--operation mode is normal

B1L16 = B1L4 & B1L85 # !B1L4 & (B1L06);


--B1L26 is eALU:cALU|add~16024
--operation mode is arithmetic

B1L26_carry_eqn = B1L34;
B1L26 = B1L061 $ B1L161 $ !B1L26_carry_eqn;

--B1L36 is eALU:cALU|add~16026
--operation mode is arithmetic

B1L36 = CARRY(B1L061 & (B1L161 # !B1L34) # !B1L061 & B1L161 & !B1L34);


--D1L02 is eMux32:cMUX32|pOut[19]~495
--operation mode is normal

D1L02 = pControl_in[2] & pImm[19] # !pControl_in[2] & (pData2[19]);


--B1L46 is eALU:cALU|add~16029
--operation mode is normal

B1L46 = pData1[19] & (D1L02 # B1L232 & pImm[0]) # !pData1[19] & D1L02 & B1L232 & pImm[0];


--B1L56 is eALU:cALU|add~16030
--operation mode is normal

B1L56 = B1L4 & B1L26 # !B1L4 & (B1L46);


--B1L632 is eALU:cALU|reduce_nor~855
--operation mode is normal

B1L632 = B1L35 # B1L75 # B1L16 # B1L56;


--B1L732 is eALU:cALU|reduce_nor~856
--operation mode is normal

B1L732 = B1L332 # B1L432 # B1L532 # B1L632;


--B1L66 is eALU:cALU|add~16031
--operation mode is arithmetic

B1L66_carry_eqn = B1L701;
B1L66 = B1L261 $ B1L361 $ B1L66_carry_eqn;

--B1L76 is eALU:cALU|add~16033
--operation mode is arithmetic

B1L76 = CARRY(B1L261 & !B1L361 & !B1L701 # !B1L261 & (!B1L701 # !B1L361));


--D1L72 is eMux32:cMUX32|pOut[26]~496
--operation mode is normal

D1L72 = pControl_in[2] & pImm[26] # !pControl_in[2] & (pData2[26]);


--B1L86 is eALU:cALU|add~16036
--operation mode is normal

B1L86 = pData1[26] & (D1L72 # B1L232 & pImm[0]) # !pData1[26] & D1L72 & B1L232 & pImm[0];


--B1L96 is eALU:cALU|add~16037
--operation mode is normal

B1L96 = B1L4 & B1L66 # !B1L4 & (B1L86);


--B1L07 is eALU:cALU|add~16038
--operation mode is arithmetic

B1L07_carry_eqn = B1L95;
B1L07 = B1L461 $ B1L561 $ B1L07_carry_eqn;

--B1L17 is eALU:cALU|add~16040
--operation mode is arithmetic

B1L17 = CARRY(B1L461 & !B1L561 & !B1L95 # !B1L461 & (!B1L95 # !B1L561));


--D1L7 is eMux32:cMUX32|pOut[6]~497
--operation mode is normal

D1L7 = pControl_in[2] & pImm[6] # !pControl_in[2] & (pData2[6]);


--B1L27 is eALU:cALU|add~16043
--operation mode is normal

B1L27 = pData1[6] & (D1L7 # B1L232 & pImm[0]) # !pData1[6] & D1L7 & B1L232 & pImm[0];


--B1L37 is eALU:cALU|add~16044
--operation mode is normal

B1L37 = B1L4 & B1L07 # !B1L4 & (B1L27);


--B1L47 is eALU:cALU|add~16045
--operation mode is arithmetic

B1L47_carry_eqn = B1L7;
B1L47 = B1L661 $ B1L761 $ B1L47_carry_eqn;

--B1L57 is eALU:cALU|add~16047
--operation mode is arithmetic

B1L57 = CARRY(B1L661 & !B1L761 & !B1L7 # !B1L661 & (!B1L7 # !B1L761));


--D1L71 is eMux32:cMUX32|pOut[16]~498
--operation mode is normal

D1L71 = pControl_in[2] & pImm[16] # !pControl_in[2] & (pData2[16]);


--B1L67 is eALU:cALU|add~16050
--operation mode is normal

B1L67 = pData1[16] & (D1L71 # B1L232 & pImm[0]) # !pData1[16] & D1L71 & B1L232 & pImm[0];


--B1L77 is eALU:cALU|add~16051
--operation mode is normal

B1L77 = B1L4 & B1L47 # !B1L4 & (B1L67);


--B1L87 is eALU:cALU|add~16052
--operation mode is arithmetic

B1L87_carry_eqn = B1L811;
B1L87 = B1L861 $ B1L961 $ !B1L87_carry_eqn;

--B1L97 is eALU:cALU|add~16054
--operation mode is arithmetic

B1L97 = CARRY(B1L861 & (B1L961 # !B1L811) # !B1L861 & B1L961 & !B1L811);


--D1L4 is eMux32:cMUX32|pOut[3]~499
--operation mode is normal

D1L4 = pControl_in[2] & pImm[3] # !pControl_in[2] & (pData2[3]);


--B1L08 is eALU:cALU|add~16057
--operation mode is normal

B1L08 = pData1[3] & (D1L4 # B1L232 & pImm[0]) # !pData1[3] & D1L4 & B1L232 & pImm[0];


--B1L18 is eALU:cALU|add~16058
--operation mode is normal

B1L18 = B1L4 & B1L87 # !B1L4 & (B1L08);


--B1L832 is eALU:cALU|reduce_nor~857
--operation mode is normal

B1L832 = B1L96 # B1L37 # B1L77 # B1L18;


--B1L28 is eALU:cALU|add~16059
--operation mode is arithmetic

B1L28_carry_eqn = B1L91;
B1L28 = B1L071 $ B1L171 $ B1L28_carry_eqn;

--B1L38 is eALU:cALU|add~16061
--operation mode is arithmetic

B1L38 = CARRY(B1L071 & !B1L171 & !B1L91 # !B1L071 & (!B1L91 # !B1L171));


--D1L31 is eMux32:cMUX32|pOut[12]~500
--operation mode is normal

D1L31 = pControl_in[2] & pImm[12] # !pControl_in[2] & (pData2[12]);


--B1L48 is eALU:cALU|add~16064
--operation mode is normal

B1L48 = pData1[12] & (D1L31 # B1L232 & pImm[0]) # !pData1[12] & D1L31 & B1L232 & pImm[0];


--B1L58 is eALU:cALU|add~16065
--operation mode is normal

B1L58 = B1L4 & B1L28 # !B1L4 & (B1L48);


--B1L68 is eALU:cALU|add~16066
--operation mode is arithmetic

B1L68_carry_eqn = B1L38;
B1L68 = B1L271 $ B1L371 $ !B1L68_carry_eqn;

--B1L78 is eALU:cALU|add~16068
--operation mode is arithmetic

B1L78 = CARRY(B1L271 & (B1L371 # !B1L38) # !B1L271 & B1L371 & !B1L38);


--D1L41 is eMux32:cMUX32|pOut[13]~501
--operation mode is normal

D1L41 = pControl_in[2] & pImm[13] # !pControl_in[2] & (pData2[13]);


--B1L88 is eALU:cALU|add~16071
--operation mode is normal

B1L88 = pData1[13] & (D1L41 # B1L232 & pImm[0]) # !pData1[13] & D1L41 & B1L232 & pImm[0];


--B1L98 is eALU:cALU|add~16072
--operation mode is normal

B1L98 = B1L4 & B1L68 # !B1L4 & (B1L88);


--B1L09 is eALU:cALU|add~16073
--operation mode is arithmetic

B1L09_carry_eqn = B1L32;
B1L09 = B1L471 $ B1L571 $ !B1L09_carry_eqn;

--B1L19 is eALU:cALU|add~16075
--operation mode is arithmetic

B1L19 = CARRY(B1L471 & (B1L571 # !B1L32) # !B1L471 & B1L571 & !B1L32);


--D1L42 is eMux32:cMUX32|pOut[23]~502
--operation mode is normal

D1L42 = pControl_in[2] & pImm[23] # !pControl_in[2] & (pData2[23]);


--B1L29 is eALU:cALU|add~16078
--operation mode is normal

B1L29 = pData1[23] & (D1L42 # B1L232 & pImm[0]) # !pData1[23] & D1L42 & B1L232 & pImm[0];


--B1L39 is eALU:cALU|add~16079
--operation mode is normal

B1L39 = B1L4 & B1L09 # !B1L4 & (B1L29);


--B1L49 is eALU:cALU|add~16080
--operation mode is arithmetic

B1L49_carry_eqn = B1L13;
B1L49 = B1L671 $ B1L771 $ B1L49_carry_eqn;

--B1L59 is eALU:cALU|add~16082
--operation mode is arithmetic

B1L59 = CARRY(B1L671 & !B1L771 & !B1L13 # !B1L671 & (!B1L13 # !B1L771));


--D1L92 is eMux32:cMUX32|pOut[28]~503
--operation mode is normal

D1L92 = pControl_in[2] & pImm[28] # !pControl_in[2] & (pData2[28]);


--B1L69 is eALU:cALU|add~16085
--operation mode is normal

B1L69 = pData1[28] & (D1L92 # B1L232 & pImm[0]) # !pData1[28] & D1L92 & B1L232 & pImm[0];


--B1L79 is eALU:cALU|add~16086
--operation mode is normal

B1L79 = B1L4 & B1L49 # !B1L4 & (B1L69);


--B1L932 is eALU:cALU|reduce_nor~858
--operation mode is normal

B1L932 = B1L58 # B1L98 # B1L39 # B1L79;


--B1L89 is eALU:cALU|add~16087
--operation mode is arithmetic

B1L89_carry_eqn = B1L19;
B1L89 = B1L871 $ B1L971 $ B1L89_carry_eqn;

--B1L99 is eALU:cALU|add~16089
--operation mode is arithmetic

B1L99 = CARRY(B1L871 & !B1L971 & !B1L19 # !B1L871 & (!B1L19 # !B1L971));


--D1L52 is eMux32:cMUX32|pOut[24]~504
--operation mode is normal

D1L52 = pControl_in[2] & pImm[24] # !pControl_in[2] & (pData2[24]);


--B1L001 is eALU:cALU|add~16092
--operation mode is normal

B1L001 = pData1[24] & (D1L52 # B1L232 & pImm[0]) # !pData1[24] & D1L52 & B1L232 & pImm[0];


--B1L101 is eALU:cALU|add~16093
--operation mode is normal

B1L101 = B1L4 & B1L89 # !B1L4 & (B1L001);


--B1L201 is eALU:cALU|add~16094
--operation mode is arithmetic

B1L201_carry_eqn = B1L381;
B1L201 = B1L081 $ B1L181 $ B1L201_carry_eqn;

--B1L301 is eALU:cALU|add~16096
--operation mode is arithmetic

B1L301 = CARRY(B1L081 & !B1L181 & !B1L381 # !B1L081 & (!B1L381 # !B1L181));


--D1L1 is eMux32:cMUX32|pOut[0]~505
--operation mode is normal

D1L1 = pControl_in[2] & pImm[0] # !pControl_in[2] & (pData2[0]);


--B1L401 is eALU:cALU|add~16099
--operation mode is normal

B1L401 = pData1[0] & (D1L1 # B1L232 & pImm[0]) # !pData1[0] & D1L1 & B1L232 & pImm[0];


--B1L501 is eALU:cALU|add~16100
--operation mode is normal

B1L501 = B1L4 & B1L201 # !B1L4 & (B1L401);


--B1L601 is eALU:cALU|add~16101
--operation mode is arithmetic

B1L601_carry_eqn = B1L99;
B1L601 = B1L481 $ B1L581 $ !B1L601_carry_eqn;

--B1L701 is eALU:cALU|add~16103
--operation mode is arithmetic

B1L701 = CARRY(B1L481 & (B1L581 # !B1L99) # !B1L481 & B1L581 & !B1L99);


--D1L62 is eMux32:cMUX32|pOut[25]~506
--operation mode is normal

D1L62 = pControl_in[2] & pImm[25] # !pControl_in[2] & (pData2[25]);


--B1L801 is eALU:cALU|add~16106
--operation mode is normal

B1L801 = pData1[25] & (D1L62 # B1L232 & pImm[0]) # !pData1[25] & D1L62 & B1L232 & pImm[0];


--B1L901 is eALU:cALU|add~16107
--operation mode is normal

B1L901 = B1L4 & B1L601 # !B1L4 & (B1L801);


--B1L011 is eALU:cALU|add~16108
--operation mode is arithmetic

B1L011_carry_eqn = B1L59;
B1L011 = B1L681 $ B1L781 $ !B1L011_carry_eqn;

--B1L111 is eALU:cALU|add~16110
--operation mode is arithmetic

B1L111 = CARRY(B1L681 & (B1L781 # !B1L59) # !B1L681 & B1L781 & !B1L59);


--D1L03 is eMux32:cMUX32|pOut[29]~507
--operation mode is normal

D1L03 = pControl_in[2] & pImm[29] # !pControl_in[2] & (pData2[29]);


--B1L211 is eALU:cALU|add~16113
--operation mode is normal

B1L211 = pData1[29] & (D1L03 # B1L232 & pImm[0]) # !pData1[29] & D1L03 & B1L232 & pImm[0];


--B1L311 is eALU:cALU|add~16114
--operation mode is normal

B1L311 = B1L4 & B1L011 # !B1L4 & (B1L211);


--B1L042 is eALU:cALU|reduce_nor~859
--operation mode is normal

B1L042 = B1L101 # B1L501 # B1L901 # B1L311;


--B1L411 is eALU:cALU|add~16115
--operation mode is normal

B1L411_carry_eqn = B1L11;
B1L411 = B1L881 $ B1L981 $ !B1L411_carry_eqn;


--D1L23 is eMux32:cMUX32|pOut[31]~508
--operation mode is normal

D1L23 = pControl_in[2] & pImm[31] # !pControl_in[2] & (pData2[31]);


--B1L511 is eALU:cALU|add~16120
--operation mode is normal

B1L511 = pData1[31] & (D1L23 # B1L232 & pImm[0]) # !pData1[31] & D1L23 & B1L232 & pImm[0];


--B1L611 is eALU:cALU|add~16121
--operation mode is normal

B1L611 = B1L4 & B1L411 # !B1L4 & (B1L511);


--B1L711 is eALU:cALU|add~16122
--operation mode is arithmetic

B1L711_carry_eqn = B1L221;
B1L711 = B1L091 $ B1L191 $ B1L711_carry_eqn;

--B1L811 is eALU:cALU|add~16124
--operation mode is arithmetic

B1L811 = CARRY(B1L091 & !B1L191 & !B1L221 # !B1L091 & (!B1L221 # !B1L191));


--D1L3 is eMux32:cMUX32|pOut[2]~509
--operation mode is normal

D1L3 = pControl_in[2] & pImm[2] # !pControl_in[2] & (pData2[2]);


--B1L911 is eALU:cALU|add~16127
--operation mode is normal

B1L911 = pData1[2] & (D1L3 # B1L232 & pImm[0]) # !pData1[2] & D1L3 & B1L232 & pImm[0];


--B1L021 is eALU:cALU|add~16128
--operation mode is normal

B1L021 = B1L4 & B1L711 # !B1L4 & (B1L911);


--B1L121 is eALU:cALU|add~16129
--operation mode is arithmetic

B1L121_carry_eqn = B1L301;
B1L121 = B1L291 $ B1L391 $ !B1L121_carry_eqn;

--B1L221 is eALU:cALU|add~16131
--operation mode is arithmetic

B1L221 = CARRY(B1L291 & (B1L391 # !B1L301) # !B1L291 & B1L391 & !B1L301);


--D1L2 is eMux32:cMUX32|pOut[1]~510
--operation mode is normal

D1L2 = pControl_in[2] & pImm[1] # !pControl_in[2] & (pData2[1]);


--B1L321 is eALU:cALU|add~16134
--operation mode is normal

B1L321 = pData1[1] & (D1L2 # B1L232 & pImm[0]) # !pData1[1] & D1L2 & B1L232 & pImm[0];


--B1L421 is eALU:cALU|add~16135
--operation mode is normal

B1L421 = B1L4 & B1L121 # !B1L4 & (B1L321);


--B1L521 is eALU:cALU|add~16136
--operation mode is arithmetic

B1L521_carry_eqn = B1L57;
B1L521 = B1L491 $ B1L591 $ !B1L521_carry_eqn;

--B1L621 is eALU:cALU|add~16138
--operation mode is arithmetic

B1L621 = CARRY(B1L491 & (B1L591 # !B1L57) # !B1L491 & B1L591 & !B1L57);


--D1L81 is eMux32:cMUX32|pOut[17]~511
--operation mode is normal

D1L81 = pControl_in[2] & pImm[17] # !pControl_in[2] & (pData2[17]);


--B1L721 is eALU:cALU|add~16141
--operation mode is normal

B1L721 = pData1[17] & (D1L81 # B1L232 & pImm[0]) # !pData1[17] & D1L81 & B1L232 & pImm[0];


--B1L821 is eALU:cALU|add~16142
--operation mode is normal

B1L821 = B1L4 & B1L521 # !B1L4 & (B1L721);


--B1L142 is eALU:cALU|reduce_nor~860
--operation mode is normal

B1L142 = B1L611 # B1L021 # B1L421 # B1L821;


--B1L242 is eALU:cALU|reduce_nor~861
--operation mode is normal

B1L242 = B1L832 # B1L932 # B1L042 # B1L142;


--B1L891 is eALU:cALU|pBranch_out~16
--operation mode is normal

B1L891 = pControl_in[3] & (pControl_in[1] $ (!B1L732 & !B1L242));


--B1L342 is eALU:cALU|reduce_nor~862
--operation mode is normal

B1L342 = pImm[1] & B1L132 & !pImm[2] & !pImm[0];


--B1L991 is eALU:cALU|pOut[0]~2843
--operation mode is normal

B1L991 = pImm[3] & (B1L342 & B1L611 # !B1L342 & (B1L501)) # !pImm[3] & (B1L501);


--B1L002 is eALU:cALU|pOut[1]~2844
--operation mode is normal

B1L002 = B1L421 & (!B1L342 # !pImm[3]);


--B1L102 is eALU:cALU|pOut[2]~2845
--operation mode is normal

B1L102 = B1L021 & (!B1L342 # !pImm[3]);


--B1L202 is eALU:cALU|pOut[3]~2846
--operation mode is normal

B1L202 = B1L18 & (!B1L342 # !pImm[3]);


--B1L302 is eALU:cALU|pOut[4]~2847
--operation mode is normal

B1L302 = B1L94 & (!B1L342 # !pImm[3]);


--B1L402 is eALU:cALU|pOut[5]~2848
--operation mode is normal

B1L402 = B1L16 & (!B1L342 # !pImm[3]);


--B1L502 is eALU:cALU|pOut[6]~2849
--operation mode is normal

B1L502 = B1L37 & (!B1L342 # !pImm[3]);


--B1L602 is eALU:cALU|pOut[7]~2850
--operation mode is normal

B1L602 = B1L35 & (!B1L342 # !pImm[3]);


--B1L702 is eALU:cALU|pOut[8]~2851
--operation mode is normal

B1L702 = B1L73 & (!B1L342 # !pImm[3]);


--B1L802 is eALU:cALU|pOut[9]~2852
--operation mode is normal

B1L802 = B1L14 & (!B1L342 # !pImm[3]);


--B1L902 is eALU:cALU|pOut[10]~2853
--operation mode is normal

B1L902 = B1L71 & (!B1L342 # !pImm[3]);


--B1L012 is eALU:cALU|pOut[11]~2854
--operation mode is normal

B1L012 = B1L12 & (!B1L342 # !pImm[3]);


--B1L112 is eALU:cALU|pOut[12]~2855
--operation mode is normal

B1L112 = B1L58 & (!B1L342 # !pImm[3]);


--B1L212 is eALU:cALU|pOut[13]~2856
--operation mode is normal

B1L212 = B1L98 & (!B1L342 # !pImm[3]);


--B1L312 is eALU:cALU|pOut[14]~2857
--operation mode is normal

B1L312 = B1L5 & (!B1L342 # !pImm[3]);


--B1L412 is eALU:cALU|pOut[15]~2858
--operation mode is normal

B1L412 = B1L9 & (!B1L342 # !pImm[3]);


--B1L512 is eALU:cALU|pOut[16]~2859
--operation mode is normal

B1L512 = B1L77 & (!B1L342 # !pImm[3]);


--B1L612 is eALU:cALU|pOut[17]~2860
--operation mode is normal

B1L612 = B1L821 & (!B1L342 # !pImm[3]);


--B1L712 is eALU:cALU|pOut[18]~2861
--operation mode is normal

B1L712 = B1L54 & (!B1L342 # !pImm[3]);


--B1L812 is eALU:cALU|pOut[19]~2862
--operation mode is normal

B1L812 = B1L56 & (!B1L342 # !pImm[3]);


--B1L912 is eALU:cALU|pOut[20]~2863
--operation mode is normal

B1L912 = B1L75 & (!B1L342 # !pImm[3]);


--B1L022 is eALU:cALU|pOut[21]~2864
--operation mode is normal

B1L022 = B1L92 & (!B1L342 # !pImm[3]);


--B1L122 is eALU:cALU|pOut[22]~2865
--operation mode is normal

B1L122 = B1L52 & (!B1L342 # !pImm[3]);


--B1L222 is eALU:cALU|pOut[23]~2866
--operation mode is normal

B1L222 = B1L39 & (!B1L342 # !pImm[3]);


--B1L322 is eALU:cALU|pOut[24]~2867
--operation mode is normal

B1L322 = B1L101 & (!B1L342 # !pImm[3]);


--B1L422 is eALU:cALU|pOut[25]~2868
--operation mode is normal

B1L422 = B1L901 & (!B1L342 # !pImm[3]);


--B1L522 is eALU:cALU|pOut[26]~2869
--operation mode is normal

B1L522 = B1L96 & (!B1L342 # !pImm[3]);


--B1L622 is eALU:cALU|pOut[27]~2870
--operation mode is normal

B1L622 = B1L33 & (!B1L342 # !pImm[3]);


--B1L722 is eALU:cALU|pOut[28]~2871
--operation mode is normal

B1L722 = B1L79 & (!B1L342 # !pImm[3]);


--B1L822 is eALU:cALU|pOut[29]~2872
--operation mode is normal

B1L822 = B1L311 & (!B1L342 # !pImm[3]);


--B1L922 is eALU:cALU|pOut[30]~2873
--operation mode is normal

B1L922 = B1L31 & (!B1L342 # !pImm[3]);


--B1L032 is eALU:cALU|pOut[31]~2874
--operation mode is normal

B1L032 = B1L611 & (!B1L342 # !pImm[3]);


--C1L1 is eMUX5:cMUX5|pOut[0]~45
--operation mode is normal

C1L1 = pControl_in[0] & pRD[0] # !pControl_in[0] & (pRT[0]);


--C1L2 is eMUX5:cMUX5|pOut[1]~46
--operation mode is normal

C1L2 = pControl_in[0] & pRD[1] # !pControl_in[0] & (pRT[1]);


--C1L3 is eMUX5:cMUX5|pOut[2]~47
--operation mode is normal

C1L3 = pControl_in[0] & pRD[2] # !pControl_in[0] & (pRT[2]);


--C1L4 is eMUX5:cMUX5|pOut[3]~48
--operation mode is normal

C1L4 = pControl_in[0] & pRD[3] # !pControl_in[0] & (pRT[3]);


--C1L5 is eMUX5:cMUX5|pOut[4]~49
--operation mode is normal

C1L5 = pControl_in[0] & pRD[4] # !pControl_in[0] & (pRT[4]);


--B1L921 is eALU:cALU|add~16143
--operation mode is normal

B1L921 = pData1[14] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L031 is eALU:cALU|add~16144
--operation mode is normal

B1L031 = pImm[1] & (!pImm[2] & !pImm[0]) # !pImm[1] & !pImm[3] & pImm[2];


--B1L131 is eALU:cALU|add~16145
--operation mode is normal

B1L131 = B1L791 & (pControl_in[3] $ D1L51) # !B1L791 & !D1L51 & (B1L342 # pControl_in[3]);


--B1L231 is eALU:cALU|add~16146
--operation mode is normal

B1L231 = pData1[15] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L331 is eALU:cALU|add~16147
--operation mode is normal

B1L331 = B1L791 & (pControl_in[3] $ D1L61) # !B1L791 & !D1L61 & (B1L342 # pControl_in[3]);


--B1L431 is eALU:cALU|add~16148
--operation mode is normal

B1L431 = pData1[30] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L531 is eALU:cALU|add~16149
--operation mode is normal

B1L531 = B1L791 & (pControl_in[3] $ D1L13) # !B1L791 & !D1L13 & (B1L342 # pControl_in[3]);


--B1L631 is eALU:cALU|add~16150
--operation mode is normal

B1L631 = pData1[10] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L731 is eALU:cALU|add~16151
--operation mode is normal

B1L731 = B1L791 & (pControl_in[3] $ D1L11) # !B1L791 & !D1L11 & (B1L342 # pControl_in[3]);


--B1L831 is eALU:cALU|add~16152
--operation mode is normal

B1L831 = pData1[11] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L931 is eALU:cALU|add~16153
--operation mode is normal

B1L931 = B1L791 & (pControl_in[3] $ D1L21) # !B1L791 & !D1L21 & (B1L342 # pControl_in[3]);


--B1L041 is eALU:cALU|add~16154
--operation mode is normal

B1L041 = pData1[22] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L141 is eALU:cALU|add~16155
--operation mode is normal

B1L141 = B1L791 & (pControl_in[3] $ D1L32) # !B1L791 & !D1L32 & (B1L342 # pControl_in[3]);


--B1L241 is eALU:cALU|add~16156
--operation mode is normal

B1L241 = pData1[21] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L341 is eALU:cALU|add~16157
--operation mode is normal

B1L341 = B1L791 & (pControl_in[3] $ D1L22) # !B1L791 & !D1L22 & (B1L342 # pControl_in[3]);


--B1L441 is eALU:cALU|add~16158
--operation mode is normal

B1L441 = pData1[27] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L541 is eALU:cALU|add~16159
--operation mode is normal

B1L541 = B1L791 & (pControl_in[3] $ D1L82) # !B1L791 & !D1L82 & (B1L342 # pControl_in[3]);


--B1L641 is eALU:cALU|add~16160
--operation mode is normal

B1L641 = pData1[8] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L741 is eALU:cALU|add~16161
--operation mode is normal

B1L741 = B1L791 & (pControl_in[3] $ D1L9) # !B1L791 & !D1L9 & (B1L342 # pControl_in[3]);


--B1L841 is eALU:cALU|add~16162
--operation mode is normal

B1L841 = pData1[9] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L941 is eALU:cALU|add~16163
--operation mode is normal

B1L941 = B1L791 & (pControl_in[3] $ D1L01) # !B1L791 & !D1L01 & (B1L342 # pControl_in[3]);


--B1L051 is eALU:cALU|add~16164
--operation mode is normal

B1L051 = pData1[18] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L151 is eALU:cALU|add~16165
--operation mode is normal

B1L151 = B1L791 & (pControl_in[3] $ D1L91) # !B1L791 & !D1L91 & (B1L342 # pControl_in[3]);


--B1L251 is eALU:cALU|add~16166
--operation mode is normal

B1L251 = pData1[4] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L351 is eALU:cALU|add~16167
--operation mode is normal

B1L351 = B1L791 & (pControl_in[3] $ D1L5) # !B1L791 & !D1L5 & (B1L342 # pControl_in[3]);


--B1L451 is eALU:cALU|add~16168
--operation mode is normal

B1L451 = pData1[7] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L551 is eALU:cALU|add~16169
--operation mode is normal

B1L551 = B1L791 & (pControl_in[3] $ D1L8) # !B1L791 & !D1L8 & (B1L342 # pControl_in[3]);


--B1L651 is eALU:cALU|add~16170
--operation mode is normal

B1L651 = pData1[20] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L751 is eALU:cALU|add~16171
--operation mode is normal

B1L751 = B1L791 & (pControl_in[3] $ D1L12) # !B1L791 & !D1L12 & (B1L342 # pControl_in[3]);


--B1L851 is eALU:cALU|add~16172
--operation mode is normal

B1L851 = pData1[5] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L951 is eALU:cALU|add~16173
--operation mode is normal

B1L951 = B1L791 & (pControl_in[3] $ D1L6) # !B1L791 & !D1L6 & (B1L342 # pControl_in[3]);


--B1L061 is eALU:cALU|add~16174
--operation mode is normal

B1L061 = pData1[19] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L161 is eALU:cALU|add~16175
--operation mode is normal

B1L161 = B1L791 & (pControl_in[3] $ D1L02) # !B1L791 & !D1L02 & (B1L342 # pControl_in[3]);


--B1L261 is eALU:cALU|add~16176
--operation mode is normal

B1L261 = pData1[26] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L361 is eALU:cALU|add~16177
--operation mode is normal

B1L361 = B1L791 & (pControl_in[3] $ D1L72) # !B1L791 & !D1L72 & (B1L342 # pControl_in[3]);


--B1L461 is eALU:cALU|add~16178
--operation mode is normal

B1L461 = pData1[6] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L561 is eALU:cALU|add~16179
--operation mode is normal

B1L561 = B1L791 & (pControl_in[3] $ D1L7) # !B1L791 & !D1L7 & (B1L342 # pControl_in[3]);


--B1L661 is eALU:cALU|add~16180
--operation mode is normal

B1L661 = pData1[16] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L761 is eALU:cALU|add~16181
--operation mode is normal

B1L761 = B1L791 & (pControl_in[3] $ D1L71) # !B1L791 & !D1L71 & (B1L342 # pControl_in[3]);


--B1L861 is eALU:cALU|add~16182
--operation mode is normal

B1L861 = pData1[3] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L961 is eALU:cALU|add~16183
--operation mode is normal

B1L961 = B1L791 & (pControl_in[3] $ D1L4) # !B1L791 & !D1L4 & (B1L342 # pControl_in[3]);


--B1L071 is eALU:cALU|add~16184
--operation mode is normal

B1L071 = pData1[12] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L171 is eALU:cALU|add~16185
--operation mode is normal

B1L171 = B1L791 & (pControl_in[3] $ D1L31) # !B1L791 & !D1L31 & (B1L342 # pControl_in[3]);


--B1L271 is eALU:cALU|add~16186
--operation mode is normal

B1L271 = pData1[13] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L371 is eALU:cALU|add~16187
--operation mode is normal

B1L371 = B1L791 & (pControl_in[3] $ D1L41) # !B1L791 & !D1L41 & (B1L342 # pControl_in[3]);


--B1L471 is eALU:cALU|add~16188
--operation mode is normal

B1L471 = pData1[23] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L571 is eALU:cALU|add~16189
--operation mode is normal

B1L571 = B1L791 & (pControl_in[3] $ D1L42) # !B1L791 & !D1L42 & (B1L342 # pControl_in[3]);


--B1L671 is eALU:cALU|add~16190
--operation mode is normal

B1L671 = pData1[28] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L771 is eALU:cALU|add~16191
--operation mode is normal

B1L771 = B1L791 & (pControl_in[3] $ D1L92) # !B1L791 & !D1L92 & (B1L342 # pControl_in[3]);


--B1L871 is eALU:cALU|add~16192
--operation mode is normal

B1L871 = pData1[24] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L971 is eALU:cALU|add~16193
--operation mode is normal

B1L971 = B1L791 & (pControl_in[3] $ D1L52) # !B1L791 & !D1L52 & (B1L342 # pControl_in[3]);


--B1L081 is eALU:cALU|add~16194
--operation mode is normal

B1L081 = pData1[0] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L181 is eALU:cALU|add~16195
--operation mode is normal

B1L181 = B1L791 & (pControl_in[3] $ D1L1) # !B1L791 & !D1L1 & (B1L342 # pControl_in[3]);


--B1L381 is eALU:cALU|add~16198
--operation mode is arithmetic

B1L381 = CARRY(pControl_in[3] # B1L691);


--B1L481 is eALU:cALU|add~16201
--operation mode is normal

B1L481 = pData1[25] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L581 is eALU:cALU|add~16202
--operation mode is normal

B1L581 = B1L791 & (pControl_in[3] $ D1L62) # !B1L791 & !D1L62 & (B1L342 # pControl_in[3]);


--B1L681 is eALU:cALU|add~16203
--operation mode is normal

B1L681 = pData1[29] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L781 is eALU:cALU|add~16204
--operation mode is normal

B1L781 = B1L791 & (pControl_in[3] $ D1L03) # !B1L791 & !D1L03 & (B1L342 # pControl_in[3]);


--B1L881 is eALU:cALU|add~16205
--operation mode is normal

B1L881 = pData1[31] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L981 is eALU:cALU|add~16206
--operation mode is normal

B1L981 = B1L791 & (pControl_in[3] $ D1L23) # !B1L791 & !D1L23 & (B1L342 # pControl_in[3]);


--B1L091 is eALU:cALU|add~16207
--operation mode is normal

B1L091 = pData1[2] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L191 is eALU:cALU|add~16208
--operation mode is normal

B1L191 = B1L791 & (pControl_in[3] $ D1L3) # !B1L791 & !D1L3 & (B1L342 # pControl_in[3]);


--B1L291 is eALU:cALU|add~16209
--operation mode is normal

B1L291 = pData1[1] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L391 is eALU:cALU|add~16210
--operation mode is normal

B1L391 = B1L791 & (pControl_in[3] $ D1L2) # !B1L791 & !D1L2 & (B1L342 # pControl_in[3]);


--B1L491 is eALU:cALU|add~16211
--operation mode is normal

B1L491 = pData1[17] & (pControl_in[3] # !B1L232 # !pControl_in[1]);


--B1L591 is eALU:cALU|add~16212
--operation mode is normal

B1L591 = B1L791 & (pControl_in[3] $ D1L81) # !B1L791 & !D1L81 & (B1L342 # pControl_in[3]);


--B1L691 is eALU:cALU|add~16213
--operation mode is normal

B1L691 = pControl_in[1] & B1L342;


--B1L791 is eALU:cALU|add~16214
--operation mode is normal

B1L791 = pImm[4] # !B1L031 # !pControl_in[1] # !pImm[5];


--pControl_in[4] is pControl_in[4]
--operation mode is input

pControl_in[4] = INPUT();


--pControl_in[5] is pControl_in[5]
--operation mode is input

pControl_in[5] = INPUT();


--pControl_in[6] is pControl_in[6]
--operation mode is input

pControl_in[6] = INPUT();


--pControl_in[7] is pControl_in[7]
--operation mode is input

pControl_in[7] = INPUT();


--pControl_in[3] is pControl_in[3]
--operation mode is input

pControl_in[3] = INPUT();


--pControl_in[1] is pControl_in[1]
--operation mode is input

pControl_in[1] = INPUT();


--pData1[14] is pData1[14]
--operation mode is input

pData1[14] = INPUT();


--pImm[14] is pImm[14]
--operation mode is input

pImm[14] = INPUT();


--pData2[14] is pData2[14]
--operation mode is input

pData2[14] = INPUT();


--pControl_in[2] is pControl_in[2]
--operation mode is input

pControl_in[2] = INPUT();


--pImm[5] is pImm[5]
--operation mode is input

pImm[5] = INPUT();


--pImm[4] is pImm[4]
--operation mode is input

pImm[4] = INPUT();


--pImm[2] is pImm[2]
--operation mode is input

pImm[2] = INPUT();


--pImm[1] is pImm[1]
--operation mode is input

pImm[1] = INPUT();


--pImm[3] is pImm[3]
--operation mode is input

pImm[3] = INPUT();


--pImm[0] is pImm[0]
--operation mode is input

pImm[0] = INPUT();


--pData1[15] is pData1[15]
--operation mode is input

pData1[15] = INPUT();


--pImm[15] is pImm[15]
--operation mode is input

pImm[15] = INPUT();


--pData2[15] is pData2[15]
--operation mode is input

pData2[15] = INPUT();


--pData1[30] is pData1[30]
--operation mode is input

pData1[30] = INPUT();


--pImm[30] is pImm[30]
--operation mode is input

pImm[30] = INPUT();


--pData2[30] is pData2[30]
--operation mode is input

pData2[30] = INPUT();


--pData1[10] is pData1[10]
--operation mode is input

pData1[10] = INPUT();


--pImm[10] is pImm[10]
--operation mode is input

pImm[10] = INPUT();


--pData2[10] is pData2[10]
--operation mode is input

pData2[10] = INPUT();


--pData1[11] is pData1[11]
--operation mode is input

pData1[11] = INPUT();


--pImm[11] is pImm[11]
--operation mode is input

pImm[11] = INPUT();


--pData2[11] is pData2[11]
--operation mode is input

pData2[11] = INPUT();


--pData1[22] is pData1[22]
--operation mode is input

pData1[22] = INPUT();


--pImm[22] is pImm[22]
--operation mode is input

pImm[22] = INPUT();


--pData2[22] is pData2[22]
--operation mode is input

pData2[22] = INPUT();


--pData1[21] is pData1[21]
--operation mode is input

pData1[21] = INPUT();


--pImm[21] is pImm[21]
--operation mode is input

pImm[21] = INPUT();


--pData2[21] is pData2[21]
--operation mode is input

pData2[21] = INPUT();


--pData1[27] is pData1[27]
--operation mode is input

pData1[27] = INPUT();


--pImm[27] is pImm[27]
--operation mode is input

pImm[27] = INPUT();


--pData2[27] is pData2[27]
--operation mode is input

pData2[27] = INPUT();


--pData1[8] is pData1[8]
--operation mode is input

pData1[8] = INPUT();


--pImm[8] is pImm[8]
--operation mode is input

pImm[8] = INPUT();


--pData2[8] is pData2[8]
--operation mode is input

pData2[8] = INPUT();


--pData1[9] is pData1[9]
--operation mode is input

pData1[9] = INPUT();


--pImm[9] is pImm[9]
--operation mode is input

pImm[9] = INPUT();


--pData2[9] is pData2[9]
--operation mode is input

pData2[9] = INPUT();


--pData1[18] is pData1[18]
--operation mode is input

pData1[18] = INPUT();


--pImm[18] is pImm[18]
--operation mode is input

pImm[18] = INPUT();


--pData2[18] is pData2[18]
--operation mode is input

pData2[18] = INPUT();


--pData1[4] is pData1[4]
--operation mode is input

pData1[4] = INPUT();


--pData2[4] is pData2[4]
--operation mode is input

pData2[4] = INPUT();


--pData1[7] is pData1[7]
--operation mode is input

pData1[7] = INPUT();


--pImm[7] is pImm[7]
--operation mode is input

pImm[7] = INPUT();


--pData2[7] is pData2[7]
--operation mode is input

pData2[7] = INPUT();


--pData1[20] is pData1[20]
--operation mode is input

pData1[20] = INPUT();


--pImm[20] is pImm[20]
--operation mode is input

pImm[20] = INPUT();


--pData2[20] is pData2[20]
--operation mode is input

pData2[20] = INPUT();


--pData1[5] is pData1[5]
--operation mode is input

pData1[5] = INPUT();


--pData2[5] is pData2[5]
--operation mode is input

pData2[5] = INPUT();


--pData1[19] is pData1[19]
--operation mode is input

pData1[19] = INPUT();


--pImm[19] is pImm[19]
--operation mode is input

pImm[19] = INPUT();


--pData2[19] is pData2[19]
--operation mode is input

pData2[19] = INPUT();


--pData1[26] is pData1[26]
--operation mode is input

pData1[26] = INPUT();


--pImm[26] is pImm[26]
--operation mode is input

pImm[26] = INPUT();


--pData2[26] is pData2[26]
--operation mode is input

pData2[26] = INPUT();


--pData1[6] is pData1[6]
--operation mode is input

pData1[6] = INPUT();


--pImm[6] is pImm[6]
--operation mode is input

pImm[6] = INPUT();


--pData2[6] is pData2[6]
--operation mode is input

pData2[6] = INPUT();


--pData1[16] is pData1[16]
--operation mode is input

pData1[16] = INPUT();


--pImm[16] is pImm[16]
--operation mode is input

pImm[16] = INPUT();


--pData2[16] is pData2[16]
--operation mode is input

pData2[16] = INPUT();


--pData1[3] is pData1[3]
--operation mode is input

pData1[3] = INPUT();


--pData2[3] is pData2[3]
--operation mode is input

pData2[3] = INPUT();


--pData1[12] is pData1[12]
--operation mode is input

pData1[12] = INPUT();


--pImm[12] is pImm[12]
--operation mode is input

pImm[12] = INPUT();


--pData2[12] is pData2[12]
--operation mode is input

pData2[12] = INPUT();


--pData1[13] is pData1[13]
--operation mode is input

pData1[13] = INPUT();


--pImm[13] is pImm[13]
--operation mode is input

pImm[13] = INPUT();


--pData2[13] is pData2[13]
--operation mode is input

pData2[13] = INPUT();


--pData1[23] is pData1[23]
--operation mode is input

pData1[23] = INPUT();


--pImm[23] is pImm[23]
--operation mode is input

pImm[23] = INPUT();


--pData2[23] is pData2[23]
--operation mode is input

pData2[23] = INPUT();


--pData1[28] is pData1[28]
--operation mode is input

pData1[28] = INPUT();


--pImm[28] is pImm[28]
--operation mode is input

pImm[28] = INPUT();


--pData2[28] is pData2[28]
--operation mode is input

pData2[28] = INPUT();


--pData1[24] is pData1[24]
--operation mode is input

pData1[24] = INPUT();


--pImm[24] is pImm[24]
--operation mode is input

pImm[24] = INPUT();


--pData2[24] is pData2[24]
--operation mode is input

pData2[24] = INPUT();


--pData1[0] is pData1[0]
--operation mode is input

pData1[0] = INPUT();


--pData2[0] is pData2[0]
--operation mode is input

pData2[0] = INPUT();


--pData1[25] is pData1[25]
--operation mode is input

pData1[25] = INPUT();


--pImm[25] is pImm[25]
--operation mode is input

pImm[25] = INPUT();


--pData2[25] is pData2[25]
--operation mode is input

pData2[25] = INPUT();


--pData1[29] is pData1[29]
--operation mode is input

pData1[29] = INPUT();


--pImm[29] is pImm[29]
--operation mode is input

pImm[29] = INPUT();


--pData2[29] is pData2[29]
--operation mode is input

pData2[29] = INPUT();


--pData1[31] is pData1[31]
--operation mode is input

pData1[31] = INPUT();


--pImm[31] is pImm[31]
--operation mode is input

pImm[31] = INPUT();


--pData2[31] is pData2[31]
--operation mode is input

pData2[31] = INPUT();


--pData1[2] is pData1[2]
--operation mode is input

pData1[2] = INPUT();


--pData2[2] is pData2[2]
--operation mode is input

pData2[2] = INPUT();


--pData1[1] is pData1[1]
--operation mode is input

pData1[1] = INPUT();


--pData2[1] is pData2[1]
--operation mode is input

pData2[1] = INPUT();


--pData1[17] is pData1[17]
--operation mode is input

pData1[17] = INPUT();


--pImm[17] is pImm[17]
--operation mode is input

pImm[17] = INPUT();


--pData2[17] is pData2[17]
--operation mode is input

pData2[17] = INPUT();


--pRD[0] is pRD[0]
--operation mode is input

pRD[0] = INPUT();


--pRT[0] is pRT[0]
--operation mode is input

pRT[0] = INPUT();


--pControl_in[0] is pControl_in[0]
--operation mode is input

pControl_in[0] = INPUT();


--pRD[1] is pRD[1]
--operation mode is input

pRD[1] = INPUT();


--pRT[1] is pRT[1]
--operation mode is input

pRT[1] = INPUT();


--pRD[2] is pRD[2]
--operation mode is input

pRD[2] = INPUT();


--pRT[2] is pRT[2]
--operation mode is input

pRT[2] = INPUT();


--pRD[3] is pRD[3]
--operation mode is input

pRD[3] = INPUT();


--pRT[3] is pRT[3]
--operation mode is input

pRT[3] = INPUT();


--pRD[4] is pRD[4]
--operation mode is input

pRD[4] = INPUT();


--pRT[4] is pRT[4]
--operation mode is input

pRT[4] = INPUT();


--pControl_out[0] is pControl_out[0]
--operation mode is output

pControl_out[0] = OUTPUT(pControl_in[4]);


--pControl_out[1] is pControl_out[1]
--operation mode is output

pControl_out[1] = OUTPUT(pControl_in[5]);


--pControl_out[2] is pControl_out[2]
--operation mode is output

pControl_out[2] = OUTPUT(pControl_in[6]);


--pControl_out[3] is pControl_out[3]
--operation mode is output

pControl_out[3] = OUTPUT(pControl_in[7]);


--pBranch is pBranch
--operation mode is output

pBranch = OUTPUT(B1L891);


--pResult[0] is pResult[0]
--operation mode is output

pResult[0] = OUTPUT(B1L991);


--pResult[1] is pResult[1]
--operation mode is output

pResult[1] = OUTPUT(B1L002);


--pResult[2] is pResult[2]
--operation mode is output

pResult[2] = OUTPUT(B1L102);


--pResult[3] is pResult[3]
--operation mode is output

pResult[3] = OUTPUT(B1L202);


--pResult[4] is pResult[4]
--operation mode is output

pResult[4] = OUTPUT(B1L302);


--pResult[5] is pResult[5]
--operation mode is output

pResult[5] = OUTPUT(B1L402);


--pResult[6] is pResult[6]
--operation mode is output

pResult[6] = OUTPUT(B1L502);


--pResult[7] is pResult[7]
--operation mode is output

pResult[7] = OUTPUT(B1L602);


--pResult[8] is pResult[8]
--operation mode is output

pResult[8] = OUTPUT(B1L702);


--pResult[9] is pResult[9]
--operation mode is output

pResult[9] = OUTPUT(B1L802);


--pResult[10] is pResult[10]
--operation mode is output

pResult[10] = OUTPUT(B1L902);


--pResult[11] is pResult[11]
--operation mode is output

pResult[11] = OUTPUT(B1L012);


--pResult[12] is pResult[12]
--operation mode is output

pResult[12] = OUTPUT(B1L112);


--pResult[13] is pResult[13]
--operation mode is output

pResult[13] = OUTPUT(B1L212);


--pResult[14] is pResult[14]
--operation mode is output

pResult[14] = OUTPUT(B1L312);


--pResult[15] is pResult[15]
--operation mode is output

pResult[15] = OUTPUT(B1L412);


--pResult[16] is pResult[16]
--operation mode is output

pResult[16] = OUTPUT(B1L512);


--pResult[17] is pResult[17]
--operation mode is output

pResult[17] = OUTPUT(B1L612);


--pResult[18] is pResult[18]
--operation mode is output

pResult[18] = OUTPUT(B1L712);


--pResult[19] is pResult[19]
--operation mode is output

pResult[19] = OUTPUT(B1L812);


--pResult[20] is pResult[20]
--operation mode is output

pResult[20] = OUTPUT(B1L912);


--pResult[21] is pResult[21]
--operation mode is output

pResult[21] = OUTPUT(B1L022);


--pResult[22] is pResult[22]
--operation mode is output

pResult[22] = OUTPUT(B1L122);


--pResult[23] is pResult[23]
--operation mode is output

pResult[23] = OUTPUT(B1L222);


--pResult[24] is pResult[24]
--operation mode is output

pResult[24] = OUTPUT(B1L322);


--pResult[25] is pResult[25]
--operation mode is output

pResult[25] = OUTPUT(B1L422);


--pResult[26] is pResult[26]
--operation mode is output

pResult[26] = OUTPUT(B1L522);


--pResult[27] is pResult[27]
--operation mode is output

pResult[27] = OUTPUT(B1L622);


--pResult[28] is pResult[28]
--operation mode is output

pResult[28] = OUTPUT(B1L722);


--pResult[29] is pResult[29]
--operation mode is output

pResult[29] = OUTPUT(B1L822);


--pResult[30] is pResult[30]
--operation mode is output

pResult[30] = OUTPUT(B1L922);


--pResult[31] is pResult[31]
--operation mode is output

pResult[31] = OUTPUT(B1L032);


--pWriteData[0] is pWriteData[0]
--operation mode is output

pWriteData[0] = OUTPUT(pData2[0]);


--pWriteData[1] is pWriteData[1]
--operation mode is output

pWriteData[1] = OUTPUT(pData2[1]);


--pWriteData[2] is pWriteData[2]
--operation mode is output

pWriteData[2] = OUTPUT(pData2[2]);


--pWriteData[3] is pWriteData[3]
--operation mode is output

pWriteData[3] = OUTPUT(pData2[3]);


--pWriteData[4] is pWriteData[4]
--operation mode is output

pWriteData[4] = OUTPUT(pData2[4]);


--pWriteData[5] is pWriteData[5]
--operation mode is output

pWriteData[5] = OUTPUT(pData2[5]);


--pWriteData[6] is pWriteData[6]
--operation mode is output

pWriteData[6] = OUTPUT(pData2[6]);


--pWriteData[7] is pWriteData[7]
--operation mode is output

pWriteData[7] = OUTPUT(pData2[7]);


--pWriteData[8] is pWriteData[8]
--operation mode is output

pWriteData[8] = OUTPUT(pData2[8]);


--pWriteData[9] is pWriteData[9]
--operation mode is output

pWriteData[9] = OUTPUT(pData2[9]);


--pWriteData[10] is pWriteData[10]
--operation mode is output

pWriteData[10] = OUTPUT(pData2[10]);


--pWriteData[11] is pWriteData[11]
--operation mode is output

pWriteData[11] = OUTPUT(pData2[11]);


--pWriteData[12] is pWriteData[12]
--operation mode is output

pWriteData[12] = OUTPUT(pData2[12]);


--pWriteData[13] is pWriteData[13]
--operation mode is output

pWriteData[13] = OUTPUT(pData2[13]);


--pWriteData[14] is pWriteData[14]
--operation mode is output

pWriteData[14] = OUTPUT(pData2[14]);


--pWriteData[15] is pWriteData[15]
--operation mode is output

pWriteData[15] = OUTPUT(pData2[15]);


--pWriteData[16] is pWriteData[16]
--operation mode is output

pWriteData[16] = OUTPUT(pData2[16]);


--pWriteData[17] is pWriteData[17]
--operation mode is output

pWriteData[17] = OUTPUT(pData2[17]);


--pWriteData[18] is pWriteData[18]
--operation mode is output

pWriteData[18] = OUTPUT(pData2[18]);


--pWriteData[19] is pWriteData[19]
--operation mode is output

pWriteData[19] = OUTPUT(pData2[19]);


--pWriteData[20] is pWriteData[20]
--operation mode is output

pWriteData[20] = OUTPUT(pData2[20]);


--pWriteData[21] is pWriteData[21]
--operation mode is output

pWriteData[21] = OUTPUT(pData2[21]);


--pWriteData[22] is pWriteData[22]
--operation mode is output

pWriteData[22] = OUTPUT(pData2[22]);


--pWriteData[23] is pWriteData[23]
--operation mode is output

pWriteData[23] = OUTPUT(pData2[23]);


--pWriteData[24] is pWriteData[24]
--operation mode is output

pWriteData[24] = OUTPUT(pData2[24]);


--pWriteData[25] is pWriteData[25]
--operation mode is output

pWriteData[25] = OUTPUT(pData2[25]);


--pWriteData[26] is pWriteData[26]
--operation mode is output

pWriteData[26] = OUTPUT(pData2[26]);


--pWriteData[27] is pWriteData[27]
--operation mode is output

pWriteData[27] = OUTPUT(pData2[27]);


--pWriteData[28] is pWriteData[28]
--operation mode is output

pWriteData[28] = OUTPUT(pData2[28]);


--pWriteData[29] is pWriteData[29]
--operation mode is output

pWriteData[29] = OUTPUT(pData2[29]);


--pWriteData[30] is pWriteData[30]
--operation mode is output

pWriteData[30] = OUTPUT(pData2[30]);


--pWriteData[31] is pWriteData[31]
--operation mode is output

pWriteData[31] = OUTPUT(pData2[31]);


--pWriteReg[0] is pWriteReg[0]
--operation mode is output

pWriteReg[0] = OUTPUT(C1L1);


--pWriteReg[1] is pWriteReg[1]
--operation mode is output

pWriteReg[1] = OUTPUT(C1L2);


--pWriteReg[2] is pWriteReg[2]
--operation mode is output

pWriteReg[2] = OUTPUT(C1L3);


--pWriteReg[3] is pWriteReg[3]
--operation mode is output

pWriteReg[3] = OUTPUT(C1L4);


--pWriteReg[4] is pWriteReg[4]
--operation mode is output

pWriteReg[4] = OUTPUT(C1L5);


