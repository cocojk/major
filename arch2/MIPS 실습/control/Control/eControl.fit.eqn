-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--A1L52 is reduce_nor~106 at LC_X52_Y1_N9
--operation mode is normal

A1L52 = !pOpcode[4] & !pOpcode[3] & !pOpcode[1] & !pOpcode[5];


--A1L42 is reduce_nor~3 at LC_X52_Y1_N5
--operation mode is normal

A1L42 = !pOpcode[2] & !pOpcode[0] & (A1L52);


--A1L62 is reduce_nor~107 at LC_X52_Y2_N2
--operation mode is normal

A1L62 = !pOpcode[4] & pOpcode[1];


--A1L72 is reduce_nor~108 at LC_X52_Y1_N2
--operation mode is normal

A1L72 = !pOpcode[2] & pOpcode[0] & A1L62 & pOpcode[5];


--A1L22 is pRegWrite~52 at LC_X52_Y1_N4
--operation mode is normal

A1L22 = !pReset & (A1L42 # !pOpcode[3] & A1L72);


--A1L7 is pMem2Reg~12 at LC_X52_Y1_N1
--operation mode is normal

A1L7 = !pReset & (!pOpcode[3] & A1L72);


--A1L01 is pMemWrite~12 at LC_X52_Y1_N7
--operation mode is normal

A1L01 = !pReset & (pOpcode[3] & A1L72);


--A1L5 is pBranch~11 at LC_X52_Y1_N3
--operation mode is normal

A1L5 = pOpcode[2] & (!pReset & A1L52);


--A1L11 is pMemWrite~13 at LC_X52_Y1_N8
--operation mode is normal

A1L11 = !pReset & A1L72;


--A1L2 is pALUop~45 at LC_X52_Y1_N0
--operation mode is normal

A1L2 = !pReset & A1L52 & (pOpcode[2] $ !pOpcode[0]);


--A1L02 is pRegDst~12 at LC_X52_Y1_N6
--operation mode is normal

A1L02 = !pOpcode[2] & !pOpcode[0] & !pReset & A1L52;


--pOpcode[1] is pOpcode[1] at PIN_W1
--operation mode is input

pOpcode[1] = INPUT();


--pOpcode[4] is pOpcode[4] at PIN_W2
--operation mode is input

pOpcode[4] = INPUT();


--pOpcode[3] is pOpcode[3] at PIN_W4
--operation mode is input

pOpcode[3] = INPUT();


--pOpcode[5] is pOpcode[5] at PIN_N7
--operation mode is input

pOpcode[5] = INPUT();


--pOpcode[0] is pOpcode[0] at PIN_AA3
--operation mode is input

pOpcode[0] = INPUT();


--pOpcode[2] is pOpcode[2] at PIN_V4
--operation mode is input

pOpcode[2] = INPUT();


--pReset is pReset at PIN_T5
--operation mode is input

pReset = INPUT();


--pRegWrite is pRegWrite at PIN_Y3
--operation mode is output

pRegWrite = OUTPUT(A1L22);


--pMem2Reg is pMem2Reg at PIN_Y2
--operation mode is output

pMem2Reg = OUTPUT(A1L7);


--pMemWrite is pMemWrite at PIN_T7
--operation mode is output

pMemWrite = OUTPUT(A1L01);


--pMemRead is pMemRead at PIN_P7
--operation mode is output

pMemRead = OUTPUT(A1L7);


--pBranch is pBranch at PIN_AA2
--operation mode is output

pBranch = OUTPUT(A1L5);


--pALUSrc is pALUSrc at PIN_W3
--operation mode is output

pALUSrc = OUTPUT(A1L11);


--pALUop is pALUop at PIN_V3
--operation mode is output

pALUop = OUTPUT(A1L2);


--pRegDst is pRegDst at PIN_U5
--operation mode is output

pRegDst = OUTPUT(A1L02);



